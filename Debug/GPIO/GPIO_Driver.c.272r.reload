
;; Function getCRLHPinPos (getCRLHPinPos, funcdef_no=0, decl_uid=4822, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) l  (1) Py {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44

********** Pseudo live ranges #1: **********

  BB 44
   Insn 153: point = 0, n_alt = -1
   Insn 152: point = 0, n_alt = -2
   Insn 148: point = 1, n_alt = -2
  BB 42
   Insn 224: point = 4, n_alt = -1
   Insn 140: point = 4, n_alt = 1
  BB 41
   Insn 222: point = 5, n_alt = -1
   Insn 135: point = 5, n_alt = 1
  BB 40
   Insn 220: point = 6, n_alt = -1
   Insn 130: point = 6, n_alt = 1
  BB 39
   Insn 218: point = 7, n_alt = -1
   Insn 125: point = 7, n_alt = 1
  BB 38
   Insn 216: point = 8, n_alt = -1
   Insn 120: point = 8, n_alt = 1
  BB 37
   Insn 214: point = 9, n_alt = -1
   Insn 115: point = 9, n_alt = 1
  BB 36
   Insn 212: point = 10, n_alt = -1
   Insn 110: point = 10, n_alt = 1
  BB 35
   Insn 210: point = 11, n_alt = -1
   Insn 105: point = 11, n_alt = 1
  BB 34
   Insn 208: point = 12, n_alt = -1
   Insn 100: point = 12, n_alt = 1
  BB 33
   Insn 206: point = 13, n_alt = -1
   Insn 95: point = 13, n_alt = 1
  BB 32
   Insn 204: point = 14, n_alt = -1
   Insn 90: point = 14, n_alt = 1
  BB 31
   Insn 202: point = 15, n_alt = -1
   Insn 85: point = 15, n_alt = 1
  BB 30
   Insn 200: point = 16, n_alt = -1
   Insn 80: point = 16, n_alt = 1
  BB 29
   Insn 198: point = 17, n_alt = -1
   Insn 75: point = 17, n_alt = 1
  BB 28
   Insn 196: point = 18, n_alt = -1
   Insn 70: point = 18, n_alt = 1
  BB 27
   Insn 194: point = 19, n_alt = -1
   Insn 65: point = 19, n_alt = 1
  BB 43
   Insn 145: point = 20, n_alt = 1
  BB 26
   Insn 192: point = 21, n_alt = -1
  BB 25
   Insn 60: point = 21, n_alt = -1
   Insn 59: point = 21, n_alt = 3
  BB 24
   Insn 58: point = 23, n_alt = -1
   Insn 57: point = 23, n_alt = 3
  BB 13
   Insn 183: point = 24, n_alt = -1
  BB 12
   Insn 31: point = 24, n_alt = -1
   Insn 30: point = 24, n_alt = 0
  BB 11
   Insn 29: point = 26, n_alt = -1
   Insn 28: point = 26, n_alt = 0
  BB 10
   Insn 27: point = 27, n_alt = -1
   Insn 26: point = 27, n_alt = 0
  BB 9
   Insn 180: point = 28, n_alt = -1
  BB 8
   Insn 22: point = 28, n_alt = -1
   Insn 21: point = 28, n_alt = 0
  BB 7
   Insn 20: point = 30, n_alt = -1
   Insn 19: point = 30, n_alt = 0
  BB 6
   Insn 18: point = 31, n_alt = -1
   Insn 17: point = 31, n_alt = 0
  BB 5
   Insn 16: point = 32, n_alt = -1
   Insn 15: point = 32, n_alt = 0
  BB 4
   Insn 14: point = 33, n_alt = -1
   Insn 13: point = 33, n_alt = 0
  BB 19
   Insn 186: point = 34, n_alt = -1
  BB 18
   Insn 44: point = 34, n_alt = -1
   Insn 43: point = 34, n_alt = 3
  BB 17
   Insn 42: point = 36, n_alt = -1
   Insn 41: point = 36, n_alt = 3
  BB 16
   Insn 40: point = 37, n_alt = -1
   Insn 39: point = 37, n_alt = 3
  BB 23
   Insn 189: point = 38, n_alt = -1
  BB 22
   Insn 53: point = 38, n_alt = -1
   Insn 52: point = 38, n_alt = 3
  BB 21
   Insn 51: point = 40, n_alt = -1
   Insn 50: point = 40, n_alt = 3
  BB 20
   Insn 49: point = 41, n_alt = -1
   Insn 48: point = 41, n_alt = 3
  BB 15
   Insn 38: point = 42, n_alt = -1
   Insn 37: point = 42, n_alt = 3
  BB 14
   Insn 36: point = 43, n_alt = -1
   Insn 35: point = 43, n_alt = 3
  BB 3
   Insn 12: point = 44, n_alt = -1
   Insn 11: point = 44, n_alt = 0
  BB 2
   Insn 10: point = 45, n_alt = -1
   Insn 9: point = 45, n_alt = 0
   Insn 8: point = 45, n_alt = 1
   Insn 4: point = 46, n_alt = 4
   Insn 3: point = 47, n_alt = 0
   Insn 2: point = 49, n_alt = -2
 r110: [21..45]
 r111: [2..20]
 r112: [0..1]
 r113: [48..49]
 r114: [46..47]
Compressing live ranges: from 50 to 10 - 20%
Ranges after the compression:
 r110: [4..5]
 r111: [2..3]
 r112: [0..1]
 r113: [8..9]
 r114: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 8
changing reg in insn 59
changing reg in insn 57
changing reg in insn 52
changing reg in insn 50
changing reg in insn 48
changing reg in insn 43
changing reg in insn 41
changing reg in insn 39
changing reg in insn 37
changing reg in insn 35
changing reg in insn 30
changing reg in insn 28
changing reg in insn 26
changing reg in insn 21
changing reg in insn 19
changing reg in insn 17
changing reg in insn 15
changing reg in insn 13
changing reg in insn 11
changing reg in insn 9
changing reg in insn 145
changing reg in insn 140
changing reg in insn 135
changing reg in insn 130
changing reg in insn 125
changing reg in insn 120
changing reg in insn 115
changing reg in insn 110
changing reg in insn 105
changing reg in insn 100
changing reg in insn 95
changing reg in insn 90
changing reg in insn 85
changing reg in insn 80
changing reg in insn 75
changing reg in insn 70
changing reg in insn 65
changing reg in insn 148
changing reg in insn 148
changing reg in insn 152
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
deleting insn with uid = 148.
starting the processing of deferred insns
ending the processing of deferred insns


getCRLHPinPos

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={21d,23u} r7={1d,46u} r12={1d} r13={1d,44u} r14={1d} r100={20d,20u} r102={1d,1u} 
;;    total ref usage 187{50d,137u,0e} in 84{84 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 110 113 114
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg:SI 3 r3 [113])
        (reg:SI 0 r0 [ pinNum ])) "../GPIO/GPIO_Driver.c":13 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:HI 3 r3 [114])
        (reg:HI 3 r3 [113])) "../GPIO/GPIO_Driver.c":13 880 {*thumb2_movhi_insn}
     (nil))
(insn 4 3 5 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [1 pinNum+0 S2 A16])
        (reg:HI 3 r3 [114])) "../GPIO/GPIO_Driver.c":13 880 {*thumb2_movhi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 6 [0x6])) [1 pinNum+0 S2 A16]))) "../GPIO/GPIO_Driver.c":14 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 9 8 10 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 128 [0x80]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 10 9 155 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 98)
;;  succ:       34
;;              3 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 155 10 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 155 12 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 128 [0x80]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 156 3 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 34)
;;  succ:       14
;;              4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 156 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 156 14 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 8 [0x8]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 157 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 78)
;;  succ:       30
;;              5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 157 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 157 16 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 8 [0x8]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 158 5 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 25)
;;  succ:       10
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 158 16 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 17 158 18 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 2 [0x2]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 18 17 159 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 68)
;;  succ:       28
;;              7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 159 18 19 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 19 159 20 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 4 [0x4]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 20 19 160 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 73)
;;  succ:       29
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 160 20 21 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 21 160 22 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 1 [0x1]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 22 21 179 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 63)
;;  succ:       27
;;              9 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 179 22 180 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 180 179 181 9 (set (pc)
        (label_ref 143)) "../GPIO/GPIO_Driver.c":14 214 {*arm_jump}
     (nil)
 -> 143)
;;  succ:       43 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 181 180 25)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(code_label 25 181 162 10 6 (nil) [1 uses])
(note 162 25 26 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 26 162 27 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 32 [0x20]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 27 26 163 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 88)
;;  succ:       32
;;              11 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 163 27 28 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 28 163 29 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 64 [0x40]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 29 28 164 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 93)
;;  succ:       33
;;              12 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 164 29 30 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 30 164 31 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 16 [0x10]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 31 30 182 12 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 83)
;;  succ:       31
;;              13 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 182 31 183 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 183 182 184 13 (set (pc)
        (label_ref 143)) "../GPIO/GPIO_Driver.c":14 214 {*arm_jump}
     (nil)
 -> 143)
;;  succ:       43 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 184 183 34)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(code_label 34 184 166 14 4 (nil) [1 uses])
(note 166 34 35 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 35 166 36 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 2048 [0x800]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 36 35 167 14 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 118)
;;  succ:       38
;;              15 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 167 36 37 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 37 167 38 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 2048 [0x800]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 38 37 168 15 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 47)
;;  succ:       20
;;              16 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 168 38 39 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 39 168 40 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 512 [0x200]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 40 39 169 16 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 108)
;;  succ:       36
;;              17 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 169 40 41 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 41 169 42 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 1024 [0x400]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 42 41 170 17 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 113)
;;  succ:       37
;;              18 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 170 42 43 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 43 170 44 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 256 [0x100]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 44 43 185 18 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 103)
;;  succ:       35
;;              19 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 185 44 186 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 186 185 187 19 (set (pc)
        (label_ref 143)) "../GPIO/GPIO_Driver.c":14 214 {*arm_jump}
     (nil)
 -> 143)
;;  succ:       43 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 187 186 47)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(code_label 47 187 172 20 14 (nil) [1 uses])
(note 172 47 48 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 48 172 49 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 8192 [0x2000]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 49 48 173 20 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 128)
;;  succ:       40
;;              21 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 173 49 50 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 50 173 51 21 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 8192 [0x2000]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 51 50 174 21 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 56)
;;  succ:       24
;;              22 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 174 51 52 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 52 174 53 22 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 4096 [0x1000]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 53 52 188 22 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 123)
;;  succ:       39
;;              23 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 188 53 189 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 189 188 190 23 (set (pc)
        (label_ref 143)) "../GPIO/GPIO_Driver.c":14 214 {*arm_jump}
     (nil)
 -> 143)
;;  succ:       43 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 190 189 56)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       21
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(code_label 56 190 176 24 19 (nil) [1 uses])
(note 176 56 57 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 57 176 58 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 16384 [0x4000]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 58 57 177 24 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 133)
;;  succ:       41
;;              25 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 110
;; lr  def 	 100 [cc]
(note 177 58 59 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 59 177 60 25 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 32768 [0x8000]))) "../GPIO/GPIO_Driver.c":14 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 60 59 191 25 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "../GPIO/GPIO_Driver.c":14 204 {arm_cond_branch}
     (nil)
 -> 138)
;;  succ:       42
;;              26 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 191 60 192 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 192 191 193 26 (set (pc)
        (label_ref 143)) "../GPIO/GPIO_Driver.c":14 214 {*arm_jump}
     (nil)
 -> 143)
;;  succ:       43 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 193 192 63)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 63 193 64 27 9 (nil) [1 uses])
(note 64 63 65 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 194 27 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 0 [0])) "../GPIO/GPIO_Driver.c":16 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 194 65 195 27 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":16 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 195 194 68)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 68 195 69 28 7 (nil) [1 uses])
(note 69 68 70 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 196 28 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 4 [0x4])) "../GPIO/GPIO_Driver.c":19 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 196 70 197 28 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":19 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 197 196 73)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 73 197 74 29 8 (nil) [1 uses])
(note 74 73 75 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 198 29 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 8 [0x8])) "../GPIO/GPIO_Driver.c":22 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 198 75 199 29 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":22 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 199 198 78)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 78 199 79 30 5 (nil) [1 uses])
(note 79 78 80 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 200 30 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 12 [0xc])) "../GPIO/GPIO_Driver.c":25 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 200 80 201 30 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":25 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 201 200 83)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 83 201 84 31 12 (nil) [1 uses])
(note 84 83 85 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 202 31 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 16 [0x10])) "../GPIO/GPIO_Driver.c":28 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 202 85 203 31 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":28 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 203 202 88)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 88 203 89 32 10 (nil) [1 uses])
(note 89 88 90 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 204 32 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 20 [0x14])) "../GPIO/GPIO_Driver.c":31 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 204 90 205 32 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":31 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 205 204 93)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 93 205 94 33 11 (nil) [1 uses])
(note 94 93 95 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 206 33 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 24 [0x18])) "../GPIO/GPIO_Driver.c":34 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 206 95 207 33 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":34 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 207 206 98)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 98 207 99 34 3 (nil) [1 uses])
(note 99 98 100 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 208 34 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 28 [0x1c])) "../GPIO/GPIO_Driver.c":37 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 208 100 209 34 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":37 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 209 208 103)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 103 209 104 35 17 (nil) [1 uses])
(note 104 103 105 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 210 35 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 0 [0])) "../GPIO/GPIO_Driver.c":40 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 210 105 211 35 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":40 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 211 210 108)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 108 211 109 36 15 (nil) [1 uses])
(note 109 108 110 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 212 36 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 4 [0x4])) "../GPIO/GPIO_Driver.c":43 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 212 110 213 36 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":43 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 213 212 113)
;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       17
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 113 213 114 37 16 (nil) [1 uses])
(note 114 113 115 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 214 37 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 8 [0x8])) "../GPIO/GPIO_Driver.c":46 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 214 115 215 37 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":46 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 215 214 118)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 118 215 119 38 13 (nil) [1 uses])
(note 119 118 120 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 216 38 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 12 [0xc])) "../GPIO/GPIO_Driver.c":49 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 216 120 217 38 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":49 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 217 216 123)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 123 217 124 39 20 (nil) [1 uses])
(note 124 123 125 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 218 39 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 16 [0x10])) "../GPIO/GPIO_Driver.c":52 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 218 125 219 39 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":52 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 219 218 128)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 128 219 129 40 18 (nil) [1 uses])
(note 129 128 130 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 220 40 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 20 [0x14])) "../GPIO/GPIO_Driver.c":55 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 220 130 221 40 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":55 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 221 220 133)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       24
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 133 221 134 41 21 (nil) [1 uses])
(note 134 133 135 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 222 41 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 24 [0x18])) "../GPIO/GPIO_Driver.c":58 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 222 135 223 41 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":58 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 223 222 138)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       25
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 138 223 139 42 22 (nil) [1 uses])
(note 139 138 140 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 224 42 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 28 [0x1c])) "../GPIO/GPIO_Driver.c":61 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 224 140 225 42 (set (pc)
        (label_ref 146)) "../GPIO/GPIO_Driver.c":61 214 {*arm_jump}
     (nil)
 -> 146)
;;  succ:       44 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

(barrier 225 224 143)
;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       23 [100.0%] 
;;              19 [100.0%] 
;;              9 [100.0%] 
;;              13 [100.0%] 
;;              26 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 143 225 144 43 2 (nil) [5 uses])
(note 144 143 145 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 43 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (const_int 0 [0])) "../GPIO/GPIO_Driver.c":65 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       44 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 1, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;;              27 [100.0%] 
;;              28 [100.0%] 
;;              29 [100.0%] 
;;              30 [100.0%] 
;;              31 [100.0%] 
;;              32 [100.0%] 
;;              33 [100.0%] 
;;              34 [100.0%] 
;;              35 [100.0%] 
;;              36 [100.0%] 
;;              37 [100.0%] 
;;              38 [100.0%] 
;;              39 [100.0%] 
;;              40 [100.0%] 
;;              41 [100.0%] 
;;              42 [100.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 111
;; lr  def 	 0 [r0] 112
(code_label 146 145 147 44 23 (nil) [16 uses])
(note 147 146 152 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 152 147 153 44 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:112 <retval> ] [112])) "../GPIO/GPIO_Driver.c":66 878 {*thumb2_movsi_insn}
     (nil))
(insn 153 152 226 44 (use (reg/i:SI 0 r0)) "../GPIO/GPIO_Driver.c":66 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 226 153 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_Init (MCAL_GPIO_Init, funcdef_no=1, decl_uid=4800, cgraph_uid=1, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=12, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 11:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 18:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 26:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =l  (1) l {*arm_one_cmplsi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 38
	 Choosing alt 1 in insn 38:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 40:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 65:  (0) r  (1) rk  (2) L {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) r {*thumb2_extendqisi_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) r {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) r {*thumb2_extendqisi_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 73
	 Choosing alt 1 in insn 73:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) r {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 76:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 92:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) r {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) r {*thumb2_extendqisi_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) m {*thumb2_extendqisi_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 100
	 Choosing alt 1 in insn 100:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) r {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 103:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 108:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 114:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 116:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 121:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 122:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 124:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 125:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 126:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 130:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 132:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 135
	 Choosing alt 1 in insn 135:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 137:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 142:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 147:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 148:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 149:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 150:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =l  (1) l {*arm_one_cmplsi2}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 154
	 Choosing alt 1 in insn 154:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 155:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 156:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 160:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 165:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 166:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 167:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 169
	 Choosing alt 1 in insn 169:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 171:  (0) m  (1) l {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19

********** Pseudo live ranges #1: **********

  BB 19
   Insn 174: point = 0, n_alt = -1
   Insn 171: point = 0, n_alt = 7
   Insn 170: point = 1, n_alt = 5
   Insn 169: point = 2, n_alt = 1
   Insn 168: point = 4, n_alt = -2
   Insn 167: point = 6, n_alt = 5
   Insn 166: point = 8, n_alt = 5
   Insn 165: point = 9, n_alt = 3
   Insn 164: point = 11, n_alt = -2
   Insn 163: point = 12, n_alt = -1
   Insn 162: point = 12, n_alt = -2
   Insn 161: point = 13, n_alt = 1
   Insn 160: point = 15, n_alt = 5
   Insn 159: point = 16, n_alt = 1
  BB 16
   Insn 183: point = 17, n_alt = -1
   Insn 137: point = 17, n_alt = 7
   Insn 136: point = 18, n_alt = 5
   Insn 135: point = 19, n_alt = 1
   Insn 134: point = 21, n_alt = -2
   Insn 133: point = 23, n_alt = 1
   Insn 132: point = 25, n_alt = 5
   Insn 131: point = 26, n_alt = 5
   Insn 130: point = 28, n_alt = 5
  BB 14
   Insn 181: point = 29, n_alt = -1
   Insn 116: point = 29, n_alt = 6
   Insn 115: point = 30, n_alt = 0
   Insn 114: point = 32, n_alt = 0
   Insn 113: point = 34, n_alt = 5
  BB 12
   Insn 179: point = 35, n_alt = -1
   Insn 103: point = 35, n_alt = 6
   Insn 102: point = 36, n_alt = 0
   Insn 101: point = 38, n_alt = 0
   Insn 100: point = 40, n_alt = 1
   Insn 99: point = 42, n_alt = 1
   Insn 98: point = 43, n_alt = 0
   Insn 97: point = 45, n_alt = 0
   Insn 96: point = 47, n_alt = 0
   Insn 95: point = 49, n_alt = 1
   Insn 94: point = 51, n_alt = -2
   Insn 93: point = 53, n_alt = 1
   Insn 92: point = 55, n_alt = 5
  BB 9
   Insn 177: point = 56, n_alt = -1
   Insn 76: point = 56, n_alt = 6
   Insn 75: point = 57, n_alt = 0
   Insn 74: point = 59, n_alt = 0
   Insn 73: point = 61, n_alt = 1
   Insn 72: point = 63, n_alt = 0
   Insn 71: point = 65, n_alt = 0
   Insn 70: point = 67, n_alt = 0
   Insn 69: point = 69, n_alt = 1
   Insn 68: point = 71, n_alt = 5
   Insn 67: point = 72, n_alt = 0
   Insn 66: point = 74, n_alt = 1
   Insn 65: point = 76, n_alt = 10
   Insn 64: point = 78, n_alt = -2
   Insn 63: point = 80, n_alt = 1
   Insn 62: point = 82, n_alt = 5
  BB 18
   Insn 156: point = 83, n_alt = 7
   Insn 155: point = 84, n_alt = 5
   Insn 154: point = 85, n_alt = 1
   Insn 153: point = 87, n_alt = -2
   Insn 152: point = 89, n_alt = 0
   Insn 151: point = 91, n_alt = -2
   Insn 150: point = 93, n_alt = 1
   Insn 149: point = 95, n_alt = 5
   Insn 148: point = 96, n_alt = 5
   Insn 147: point = 98, n_alt = 5
  BB 17
   Insn 145: point = 99, n_alt = -1
   Insn 144: point = 99, n_alt = 0
   Insn 143: point = 100, n_alt = 1
   Insn 142: point = 102, n_alt = 5
  BB 15
   Insn 128: point = 103, n_alt = -1
   Insn 127: point = 103, n_alt = 0
   Insn 126: point = 104, n_alt = 1
   Insn 125: point = 106, n_alt = 5
   Insn 124: point = 107, n_alt = 6
   Insn 123: point = 108, n_alt = 0
   Insn 122: point = 110, n_alt = 0
   Insn 121: point = 112, n_alt = 5
  BB 13
   Insn 111: point = 113, n_alt = -1
   Insn 110: point = 113, n_alt = 0
   Insn 109: point = 114, n_alt = 1
   Insn 108: point = 116, n_alt = 5
  BB 11
   Insn 89: point = 117, n_alt = -1
   Insn 88: point = 117, n_alt = 0
   Insn 87: point = 118, n_alt = 1
   Insn 86: point = 120, n_alt = 5
  BB 10
   Insn 84: point = 121, n_alt = -1
   Insn 83: point = 121, n_alt = 0
   Insn 82: point = 122, n_alt = 1
   Insn 81: point = 124, n_alt = 5
  BB 8
   Insn 59: point = 125, n_alt = -1
   Insn 58: point = 125, n_alt = 0
   Insn 57: point = 126, n_alt = 1
   Insn 56: point = 128, n_alt = 5
  BB 7
   Insn 54: point = 129, n_alt = -1
   Insn 53: point = 129, n_alt = 0
   Insn 52: point = 130, n_alt = 1
   Insn 51: point = 132, n_alt = 5
  BB 6
   Insn 49: point = 133, n_alt = -1
   Insn 48: point = 133, n_alt = 0
   Insn 47: point = 134, n_alt = 1
   Insn 46: point = 136, n_alt = 5
  BB 5
   Insn 44: point = 137, n_alt = -1
   Insn 43: point = 137, n_alt = 0
   Insn 42: point = 138, n_alt = 1
   Insn 41: point = 140, n_alt = 5
   Insn 40: point = 141, n_alt = 7
   Insn 39: point = 142, n_alt = 5
   Insn 38: point = 143, n_alt = 1
   Insn 37: point = 145, n_alt = -2
   Insn 36: point = 147, n_alt = 5
   Insn 35: point = 149, n_alt = 5
   Insn 34: point = 150, n_alt = 0
   Insn 33: point = 152, n_alt = 0
   Insn 32: point = 154, n_alt = 1
   Insn 31: point = 155, n_alt = -2
   Insn 30: point = 156, n_alt = -1
   Insn 29: point = 156, n_alt = -2
   Insn 28: point = 157, n_alt = 1
   Insn 27: point = 159, n_alt = 5
   Insn 26: point = 160, n_alt = 7
  BB 3
   Insn 175: point = 162, n_alt = -1
   Insn 18: point = 162, n_alt = 2
   Insn 17: point = 164, n_alt = 5
  BB 4
   Insn 23: point = 165, n_alt = 5
  BB 2
   Insn 15: point = 166, n_alt = -1
   Insn 14: point = 166, n_alt = 0
   Insn 13: point = 167, n_alt = 1
   Insn 12: point = 169, n_alt = 5
   Insn 11: point = 170, n_alt = 6
   Insn 10: point = 171, n_alt = 0
   Insn 9: point = 173, n_alt = 1
   Insn 8: point = 174, n_alt = 7
   Insn 7: point = 175, n_alt = 1
   Insn 3: point = 176, n_alt = 7
   Insn 2: point = 176, n_alt = 7
 r110: [166..167]
 r111: [156..157]
 r112: [153..155]
 r113: [151..152]
 r114: [144..147]
 r115: [144..145]
 r116: [141..143]
 r117: [137..138]
 r118: [133..134]
 r119: [129..130]
 r120: [125..126]
 r121: [79..80]
 r122: [77..78]
 r123: [75..76]
 r124: [73..74]
 r125: [62..72]
 r126: [68..69]
 r127: [66..67]
 r128: [62..63]
 r129: [58..59]
 r130: [121..122]
 r131: [117..118]
 r132: [52..53]
 r133: [50..51]
 r134: [48..49]
 r135: [46..47]
 r136: [41..43]
 r137: [41..42]
 r138: [37..38]
 r139: [113..114]
 r140: [103..104]
 r141: [20..26]
 r142: [22..23]
 r143: [20..21]
 r144: [17..19]
 r145: [99..100]
 r146: [86..96]
 r147: [92..93]
 r148: [90..91]
 r149: [88..89]
 r150: [86..87]
 r151: [83..85]
 r152: [10..16]
 r153: [12..13]
 r154: [10..11]
 r155: [3..6]
 r156: [3..4]
 r157: [0..2]
 r158: [165..165] [160..162]
 r159: [146..150]
 r160: [5..9]
 r161: [174..175]
 r162: [172..173]
 r163: [170..171]
 r164: [168..169]
 r165: [163..164]
 r166: [158..159]
 r167: [153..154]
 r168: [148..149]
 r169: [141..142]
 r170: [139..140]
 r171: [135..136]
 r172: [131..132]
 r173: [127..128]
 r174: [81..82]
 r175: [70..71]
 r176: [64..65]
 r177: [60..61]
 r178: [56..57]
 r179: [123..124]
 r180: [119..120]
 r181: [54..55]
 r182: [44..45]
 r183: [39..40]
 r184: [35..36]
 r185: [115..116]
 r186: [33..34]
 r187: [31..32]
 r188: [29..30]
 r189: [111..112]
 r190: [109..110]
 r191: [107..108]
 r192: [105..106]
 r193: [27..28]
 r194: [24..25]
 r195: [17..18]
 r196: [101..102]
 r197: [97..98]
 r198: [94..95]
 r199: [83..84]
 r200: [14..15]
 r201: [7..8]
 r202: [0..1]
Compressing live ranges: from 176 to 163 - 92%
Ranges after the compression:
 r110: [153..154]
 r111: [144..145]
 r112: [142..143]
 r113: [140..141]
 r114: [134..137]
 r115: [134..135]
 r116: [132..133]
 r117: [128..129]
 r118: [124..125]
 r119: [120..121]
 r120: [116..117]
 r121: [72..73]
 r122: [70..71]
 r123: [68..69]
 r124: [66..67]
 r125: [56..65]
 r126: [62..63]
 r127: [60..61]
 r128: [56..57]
 r129: [52..53]
 r130: [112..113]
 r131: [108..109]
 r132: [46..47]
 r133: [44..45]
 r134: [42..43]
 r135: [40..41]
 r136: [36..37]
 r137: [36..37]
 r138: [32..33]
 r139: [104..105]
 r140: [94..95]
 r141: [16..21]
 r142: [18..19]
 r143: [16..17]
 r144: [14..15]
 r145: [90..91]
 r146: [78..87]
 r147: [84..85]
 r148: [82..83]
 r149: [80..81]
 r150: [78..79]
 r151: [76..77]
 r152: [8..13]
 r153: [10..11]
 r154: [8..9]
 r155: [2..5]
 r156: [2..3]
 r157: [0..1]
 r158: [152..152] [148..149]
 r159: [136..139]
 r160: [4..7]
 r161: [161..162]
 r162: [159..160]
 r163: [157..158]
 r164: [155..156]
 r165: [150..151]
 r166: [146..147]
 r167: [142..143]
 r168: [138..139]
 r169: [132..133]
 r170: [130..131]
 r171: [126..127]
 r172: [122..123]
 r173: [118..119]
 r174: [74..75]
 r175: [64..65]
 r176: [58..59]
 r177: [54..55]
 r178: [50..51]
 r179: [114..115]
 r180: [110..111]
 r181: [48..49]
 r182: [38..39]
 r183: [34..35]
 r184: [30..31]
 r185: [106..107]
 r186: [28..29]
 r187: [26..27]
 r188: [24..25]
 r189: [102..103]
 r190: [100..101]
 r191: [98..99]
 r192: [96..97]
 r193: [22..23]
 r194: [20..21]
 r195: [14..15]
 r196: [92..93]
 r197: [88..89]
 r198: [86..87]
 r199: [76..77]
 r200: [12..13]
 r201: [6..7]
 r202: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=12, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 47
changing reg in insn 48
changing reg in insn 52
changing reg in insn 53
changing reg in insn 57
changing reg in insn 58
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 82
changing reg in insn 83
changing reg in insn 87
changing reg in insn 88
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 101
changing reg in insn 109
changing reg in insn 110
changing reg in insn 126
changing reg in insn 127
changing reg in insn 131
changing reg in insn 133
changing reg in insn 134
changing reg in insn 134
changing reg in insn 135
changing reg in insn 137
changing reg in insn 143
changing reg in insn 144
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 159
changing reg in insn 165
changing reg in insn 161
changing reg in insn 162
changing reg in insn 164
changing reg in insn 165
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 171
changing reg in insn 23
changing reg in insn 18
changing reg in insn 26
changing reg in insn 34
changing reg in insn 37
changing reg in insn 165
changing reg in insn 168
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 46
changing reg in insn 47
changing reg in insn 51
changing reg in insn 52
changing reg in insn 56
changing reg in insn 57
changing reg in insn 62
changing reg in insn 63
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 73
changing reg in insn 75
changing reg in insn 76
changing reg in insn 81
changing reg in insn 82
changing reg in insn 86
changing reg in insn 87
changing reg in insn 92
changing reg in insn 93
changing reg in insn 97
changing reg in insn 100
changing reg in insn 102
changing reg in insn 103
changing reg in insn 108
changing reg in insn 109
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 136
changing reg in insn 137
changing reg in insn 142
changing reg in insn 143
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 155
changing reg in insn 156
changing reg in insn 160
changing reg in insn 161
changing reg in insn 166
changing reg in insn 167
changing reg in insn 170
changing reg in insn 171
deleting insn with uid = 37.
deleting insn with uid = 64.
deleting insn with uid = 94.
deleting insn with uid = 134.
deleting insn with uid = 151.
deleting insn with uid = 153.
deleting insn with uid = 168.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 163.


MCAL_GPIO_Init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,5u} r1={3d,1u} r2={17d,14u} r3={75d,71u} r4={1d,1u} r7={1d,59u} r12={5d} r13={1d,21u} r14={3d} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={12d,10u} r101={2d} r102={1d,1u} 
;;    total ref usage 479{296d,183u,0e} in 130{128 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 110 161 162 163 164
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":80 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])
        (reg:SI 1 r1 [ pinConfig ])) "../GPIO/GPIO_Driver.c":80 878 {*thumb2_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 3 r3 [161])
        (const_int 0 [0])) "../GPIO/GPIO_Driver.c":84 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 configReg+0 S4 A32])
        (reg:SI 3 r3 [161])) "../GPIO/GPIO_Driver.c":84 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [162])
        (const_int 0 [0])) "../GPIO/GPIO_Driver.c":85 878 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:QI 3 r3 [163])
        (reg:QI 3 r3 [162])) "../GPIO/GPIO_Driver.c":85 192 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8])
        (reg:QI 3 r3 [163])) "../GPIO/GPIO_Driver.c":85 192 {*arm_movqi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [164])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [164]) [1 pinConfig_55(D)->GPIO_PinNumber+0 S2 A16]))) "../GPIO/GPIO_Driver.c":88 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:110 _1 ] [110])
            (const_int 128 [0x80]))) "../GPIO/GPIO_Driver.c":88 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../GPIO/GPIO_Driver.c":88 204 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 158 165
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:SI 3 r3 [165])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 175 3 (set (reg/f:SI 3 r3 [orig:158 iftmp.0_50 ] [158])
        (plus:SI (reg:SI 3 r3 [165])
            (const_int 4 [0x4]))) "../GPIO/GPIO_Driver.c":88 4 {*arm_addsi3}
     (nil))
(jump_insn 175 18 176 3 (set (pc)
        (label_ref 24)) 214 {*arm_jump}
     (nil)
 -> 24)
;;  succ:       5 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158

(barrier 176 175 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 158
(code_label 21 176 22 4 25 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 3 r3 [orig:158 iftmp.0_50 ] [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":88 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 111 112 113 114 115 116 117 159 166 167 168 169 170
(code_label 24 23 25 5 26 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 configReg+0 S4 A32])
        (reg/f:SI 3 r3 [orig:158 iftmp.0_50 ] [158])) "../GPIO/GPIO_Driver.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 3 r3 [166])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 5 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [166]) [1 pinConfig_55(D)->GPIO_PinNumber+0 S2 A16]))) "../GPIO/GPIO_Driver.c":91 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 29 28 30 5 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:111 _2 ] [111])) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 30 29 31 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getCRLHPinPos") [flags 0x3]  <function_decl 0000000006664c00 getCRLHPinPos>) [0 getCRLHPinPos S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../GPIO/GPIO_Driver.c":91 220 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (nil))))
(insn 31 30 32 5 (set (reg:SI 2 r2 [orig:112 _3 ] [112])
        (reg:SI 0 r0)) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 5 (set (reg:SI 3 r3 [167])
        (const_int 15 [0xf])) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 5 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (ashift:SI (reg:SI 3 r3 [167])
            (reg:SI 2 r2 [orig:112 _3 ] [112]))) "../GPIO/GPIO_Driver.c":91 132 {*arm_shiftsi3}
     (nil))
(insn 34 33 35 5 (set (reg:SI 2 r2 [orig:159 _61 ] [159])
        (not:SI (reg:SI 3 r3 [orig:113 _4 ] [113]))) "../GPIO/GPIO_Driver.c":91 157 {*arm_one_cmplsi2}
     (nil))
(insn 35 34 36 5 (set (reg/f:SI 3 r3 [168])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 configReg+0 S4 A32])) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 38 5 (set (reg:SI 3 r3 [orig:114 _5 ] [114])
        (mem/v:SI (reg/f:SI 3 r3 [168]) [7 *configReg_59+0 S4 A32])) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 38 36 39 5 (set (reg:SI 2 r2 [orig:116 _7 ] [116])
        (and:SI (reg:SI 2 r2 [orig:115 _6 ] [115])
            (reg:SI 3 r3 [orig:114 _5 ] [114]))) "../GPIO/GPIO_Driver.c":91 82 {*arm_andsi3_insn}
     (nil))
(insn 39 38 40 5 (set (reg/f:SI 3 r3 [169])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 configReg+0 S4 A32])) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 40 39 41 5 (set (mem/v:SI (reg/f:SI 3 r3 [169]) [7 *configReg_59+0 S4 A32])
        (reg:SI 2 r2 [orig:116 _7 ] [116])) "../GPIO/GPIO_Driver.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 41 40 42 5 (set (reg/f:SI 3 r3 [170])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 42 41 43 5 (set (reg:SI 3 r3 [orig:117 _8 ] [117])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [170])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":94 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 43 42 44 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 _8 ] [117])
            (const_int 4 [0x4]))) "../GPIO/GPIO_Driver.c":94 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "../GPIO/GPIO_Driver.c":94 204 {arm_cond_branch}
     (nil)
 -> 60)
;;  succ:       9
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 118 171
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg/f:SI 3 r3 [171])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 47 46 48 6 (set (reg:SI 3 r3 [orig:118 _9 ] [118])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [171])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":94 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 48 47 49 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:118 _9 ] [118])
            (const_int 5 [0x5]))) "../GPIO/GPIO_Driver.c":94 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "../GPIO/GPIO_Driver.c":94 204 {arm_cond_branch}
     (nil)
 -> 60)
;;  succ:       9
;;              7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 119 172
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg/f:SI 3 r3 [172])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 52 51 53 7 (set (reg:SI 3 r3 [orig:119 _10 ] [119])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [172])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":94 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 53 52 54 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:119 _10 ] [119])
            (const_int 6 [0x6]))) "../GPIO/GPIO_Driver.c":94 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "../GPIO/GPIO_Driver.c":94 204 {arm_cond_branch}
     (nil)
 -> 60)
;;  succ:       9
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 173
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:SI 3 r3 [173])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 57 56 58 8 (set (reg:SI 3 r3 [orig:120 _11 ] [120])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [173])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":94 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 58 57 59 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:120 _11 ] [120])
            (const_int 7 [0x7]))) "../GPIO/GPIO_Driver.c":94 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 59 58 60 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "../GPIO/GPIO_Driver.c":94 204 {arm_cond_branch}
     (nil)
 -> 79)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5
;;              6
;;              7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121 122 123 124 125 126 127 128 129 174 175 176 177 178
(code_label 60 59 61 9 27 (nil) [3 uses])
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 9 (set (reg/f:SI 3 r3 [174])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":96 878 {*thumb2_movsi_insn}
     (nil))
(insn 63 62 65 9 (set (reg:SI 3 r3 [orig:121 _12 ] [121])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [174])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":96 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 65 63 66 9 (set (reg:SI 3 r3 [orig:123 _14 ] [123])
        (plus:SI (reg:SI 3 r3 [orig:122 _13 ] [122])
            (const_int -4 [0xfffffffffffffffc]))) "../GPIO/GPIO_Driver.c":96 4 {*arm_addsi3}
     (nil))
(insn 66 65 67 9 (set (reg:SI 3 r3 [orig:124 _15 ] [124])
        (ashift:SI (reg:SI 3 r3 [orig:123 _14 ] [123])
            (const_int 2 [0x2]))) "../GPIO/GPIO_Driver.c":96 132 {*arm_shiftsi3}
     (nil))
(insn 67 66 68 9 (set (reg:SI 2 r2 [orig:125 _16 ] [125])
        (sign_extend:SI (reg:QI 3 r3 [orig:124 _15 ] [124]))) "../GPIO/GPIO_Driver.c":96 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 68 67 69 9 (set (reg/f:SI 3 r3 [175])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":96 878 {*thumb2_movsi_insn}
     (nil))
(insn 69 68 70 9 (set (reg:SI 3 r3 [orig:126 _17 ] [126])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [175])
                    (const_int 3 [0x3])) [0 pinConfig_55(D)->GPIO_OUTPUT_SPEED+0 S1 A8]))) "../GPIO/GPIO_Driver.c":96 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 70 69 71 9 (set (reg:SI 3 r3 [orig:127 _18 ] [127])
        (sign_extend:SI (reg:QI 3 r3 [orig:126 _17 ] [126]))) "../GPIO/GPIO_Driver.c":96 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 71 70 72 9 (set (reg:SI 3 r3 [176])
        (and:SI (reg:SI 3 r3 [orig:127 _18 ] [127])
            (const_int 15 [0xf]))) "../GPIO/GPIO_Driver.c":96 82 {*arm_andsi3_insn}
     (nil))
(insn 72 71 73 9 (set (reg:SI 3 r3 [orig:128 _19 ] [128])
        (sign_extend:SI (reg:QI 3 r3 [176]))) "../GPIO/GPIO_Driver.c":96 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 73 72 74 9 (set (reg:SI 3 r3 [177])
        (ior:SI (reg:SI 3 r3 [orig:128 _19 ] [128])
            (reg:SI 2 r2 [orig:125 _16 ] [125]))) "../GPIO/GPIO_Driver.c":96 105 {*iorsi3_insn}
     (nil))
(insn 74 73 75 9 (set (reg:SI 3 r3 [orig:129 _20 ] [129])
        (sign_extend:SI (reg:QI 3 r3 [177]))) "../GPIO/GPIO_Driver.c":96 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 75 74 76 9 (set (reg:QI 3 r3 [178])
        (reg:QI 3 r3 [orig:129 _20 ] [129])) "../GPIO/GPIO_Driver.c":96 192 {*arm_movqi_insn}
     (nil))
(insn 76 75 177 9 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8])
        (reg:QI 3 r3 [178])) "../GPIO/GPIO_Driver.c":96 192 {*arm_movqi_insn}
     (nil))
(jump_insn 177 76 178 9 (set (pc)
        (label_ref 157)) "../GPIO/GPIO_Driver.c":96 214 {*arm_jump}
     (nil)
 -> 157)
;;  succ:       19 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 178 177 79)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 130 179
(code_label 79 178 80 10 28 (nil) [1 uses])
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg/f:SI 3 r3 [179])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":100 878 {*thumb2_movsi_insn}
     (nil))
(insn 82 81 83 10 (set (reg:SI 3 r3 [orig:130 _21 ] [130])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [179])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":100 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 83 82 84 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:130 _21 ] [130])
            (const_int 1 [0x1]))) "../GPIO/GPIO_Driver.c":100 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 84 83 85 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "../GPIO/GPIO_Driver.c":100 204 {arm_cond_branch}
     (nil)
 -> 90)
;;  succ:       12
;;              11 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 131 180
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (set (reg/f:SI 3 r3 [180])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":100 878 {*thumb2_movsi_insn}
     (nil))
(insn 87 86 88 11 (set (reg:SI 3 r3 [orig:131 _22 ] [131])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [180])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":100 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 88 87 89 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:131 _22 ] [131])
            (const_int 0 [0]))) "../GPIO/GPIO_Driver.c":100 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 89 88 90 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "../GPIO/GPIO_Driver.c":100 204 {arm_cond_branch}
     (nil)
 -> 106)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 132 133 134 135 136 137 138 181 182 183 184
(code_label 90 89 91 12 30 (nil) [1 uses])
(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 12 (set (reg/f:SI 3 r3 [181])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":101 878 {*thumb2_movsi_insn}
     (nil))
(insn 93 92 95 12 (set (reg:SI 3 r3 [orig:132 _23 ] [132])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [181])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":101 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 95 93 96 12 (set (reg:SI 3 r3 [orig:134 _25 ] [134])
        (ashift:SI (reg:SI 3 r3 [orig:133 _24 ] [133])
            (const_int 2 [0x2]))) "../GPIO/GPIO_Driver.c":101 132 {*arm_shiftsi3}
     (nil))
(insn 96 95 97 12 (set (reg:SI 3 r3 [orig:135 _26 ] [135])
        (sign_extend:SI (reg:QI 3 r3 [orig:134 _25 ] [134]))) "../GPIO/GPIO_Driver.c":101 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 97 96 98 12 (set (reg:SI 3 r3 [182])
        (and:SI (reg:SI 3 r3 [orig:135 _26 ] [135])
            (const_int 15 [0xf]))) "../GPIO/GPIO_Driver.c":101 82 {*arm_andsi3_insn}
     (nil))
(insn 98 97 99 12 (set (reg:SI 2 r2 [orig:136 _27 ] [136])
        (sign_extend:SI (reg:QI 3 r3 [182]))) "../GPIO/GPIO_Driver.c":101 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 99 98 100 12 (set (reg:SI 3 r3 [orig:137 pin_CNF_MODE.1_28 ] [137])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8]))) "../GPIO/GPIO_Driver.c":101 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 100 99 101 12 (set (reg:SI 3 r3 [183])
        (ior:SI (reg:SI 3 r3 [orig:137 pin_CNF_MODE.1_28 ] [137])
            (reg:SI 2 r2 [orig:136 _27 ] [136]))) "../GPIO/GPIO_Driver.c":101 105 {*iorsi3_insn}
     (nil))
(insn 101 100 102 12 (set (reg:SI 3 r3 [orig:138 _29 ] [138])
        (sign_extend:SI (reg:QI 3 r3 [183]))) "../GPIO/GPIO_Driver.c":101 904 {*thumb2_extendqisi_v6}
     (nil))
(insn 102 101 103 12 (set (reg:QI 3 r3 [184])
        (reg:QI 3 r3 [orig:138 _29 ] [138])) "../GPIO/GPIO_Driver.c":101 192 {*arm_movqi_insn}
     (nil))
(insn 103 102 179 12 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8])
        (reg:QI 3 r3 [184])) "../GPIO/GPIO_Driver.c":101 192 {*arm_movqi_insn}
     (nil))
(jump_insn 179 103 180 12 (set (pc)
        (label_ref 157)) "../GPIO/GPIO_Driver.c":101 214 {*arm_jump}
     (nil)
 -> 157)
;;  succ:       19 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 180 179 106)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 139 185
(code_label 106 180 107 13 31 (nil) [1 uses])
(note 107 106 108 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 13 (set (reg/f:SI 3 r3 [185])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":103 878 {*thumb2_movsi_insn}
     (nil))
(insn 109 108 110 13 (set (reg:SI 3 r3 [orig:139 _30 ] [139])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [185])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":103 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 110 109 111 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:139 _30 ] [139])
            (const_int 8 [0x8]))) "../GPIO/GPIO_Driver.c":103 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 111 110 112 13 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) "../GPIO/GPIO_Driver.c":103 204 {arm_cond_branch}
     (nil)
 -> 119)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 186 187 188
(note 112 111 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 14 (set (reg:QI 3 r3 [186])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8])) "../GPIO/GPIO_Driver.c":104 192 {*arm_movqi_insn}
     (nil))
(insn 114 113 115 14 (set (reg:SI 3 r3 [187])
        (ior:SI (reg:SI 3 r3 [186])
            (const_int 4 [0x4]))) "../GPIO/GPIO_Driver.c":104 105 {*iorsi3_insn}
     (nil))
(insn 115 114 116 14 (set (reg:QI 3 r3 [188])
        (reg:QI 3 r3 [187])) "../GPIO/GPIO_Driver.c":104 192 {*arm_movqi_insn}
     (nil))
(insn 116 115 181 14 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8])
        (reg:QI 3 r3 [188])) "../GPIO/GPIO_Driver.c":104 192 {*arm_movqi_insn}
     (nil))
(jump_insn 181 116 182 14 (set (pc)
        (label_ref 157)) 214 {*arm_jump}
     (nil)
 -> 157)
;;  succ:       19 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 182 181 119)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 140 189 190 191 192
(code_label 119 182 120 15 32 (nil) [1 uses])
(note 120 119 121 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 15 (set (reg:QI 3 r3 [189])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8])) "../GPIO/GPIO_Driver.c":106 192 {*arm_movqi_insn}
     (nil))
(insn 122 121 123 15 (set (reg:SI 3 r3 [190])
        (ior:SI (reg:SI 3 r3 [189])
            (const_int 8 [0x8]))) "../GPIO/GPIO_Driver.c":106 105 {*iorsi3_insn}
     (nil))
(insn 123 122 124 15 (set (reg:QI 3 r3 [191])
        (reg:QI 3 r3 [190])) "../GPIO/GPIO_Driver.c":106 192 {*arm_movqi_insn}
     (nil))
(insn 124 123 125 15 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8])
        (reg:QI 3 r3 [191])) "../GPIO/GPIO_Driver.c":106 192 {*arm_movqi_insn}
     (nil))
(insn 125 124 126 15 (set (reg/f:SI 3 r3 [192])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":109 878 {*thumb2_movsi_insn}
     (nil))
(insn 126 125 127 15 (set (reg:SI 3 r3 [orig:140 _31 ] [140])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [192])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":109 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 127 126 128 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:140 _31 ] [140])
            (const_int 2 [0x2]))) "../GPIO/GPIO_Driver.c":109 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 128 127 129 15 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) "../GPIO/GPIO_Driver.c":109 204 {arm_cond_branch}
     (nil)
 -> 140)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 141 142 143 144 193 194 195
(note 129 128 130 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 16 (set (reg/f:SI 3 r3 [193])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 131 130 132 16 (set (reg:SI 3 r3 [orig:141 _32 ] [141])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [193])
                (const_int 12 [0xc])) [7 gpiox_56(D)->ODR+0 S4 A32])) "../GPIO/GPIO_Driver.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 132 131 133 16 (set (reg/f:SI 2 r2 [194])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 133 132 135 16 (set (reg:SI 2 r2 [orig:142 _33 ] [142])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [194]) [1 pinConfig_55(D)->GPIO_PinNumber+0 S2 A16]))) "../GPIO/GPIO_Driver.c":110 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 135 133 136 16 (set (reg:SI 2 r2 [orig:144 _35 ] [144])
        (ior:SI (reg:SI 2 r2 [orig:143 _34 ] [143])
            (reg:SI 3 r3 [orig:141 _32 ] [141]))) "../GPIO/GPIO_Driver.c":110 105 {*iorsi3_insn}
     (nil))
(insn 136 135 137 16 (set (reg/f:SI 3 r3 [195])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 137 136 183 16 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [195])
                (const_int 12 [0xc])) [7 gpiox_56(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:144 _35 ] [144])) "../GPIO/GPIO_Driver.c":110 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 183 137 184 16 (set (pc)
        (label_ref 157)) 214 {*arm_jump}
     (nil)
 -> 157)
;;  succ:       19 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 184 183 140)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 145 196
(code_label 140 184 141 17 33 (nil) [1 uses])
(note 141 140 142 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 17 (set (reg/f:SI 3 r3 [196])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":111 878 {*thumb2_movsi_insn}
     (nil))
(insn 143 142 144 17 (set (reg:SI 3 r3 [orig:145 _36 ] [145])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [196])
                    (const_int 2 [0x2])) [0 pinConfig_55(D)->GPIO_MODE+0 S1 A16]))) "../GPIO/GPIO_Driver.c":111 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 144 143 145 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:145 _36 ] [145])
            (const_int 3 [0x3]))) "../GPIO/GPIO_Driver.c":111 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 145 144 146 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) "../GPIO/GPIO_Driver.c":111 204 {arm_cond_branch}
     (nil)
 -> 157)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 146 147 148 149 150 151 197 198 199
(note 146 145 147 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 18 (set (reg/f:SI 3 r3 [197])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":112 878 {*thumb2_movsi_insn}
     (nil))
(insn 148 147 149 18 (set (reg:SI 3 r3 [orig:146 _37 ] [146])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [197])
                (const_int 12 [0xc])) [7 gpiox_56(D)->ODR+0 S4 A32])) "../GPIO/GPIO_Driver.c":112 878 {*thumb2_movsi_insn}
     (nil))
(insn 149 148 150 18 (set (reg/f:SI 2 r2 [198])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":112 878 {*thumb2_movsi_insn}
     (nil))
(insn 150 149 152 18 (set (reg:SI 2 r2 [orig:147 _38 ] [147])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [198]) [1 pinConfig_55(D)->GPIO_PinNumber+0 S2 A16]))) "../GPIO/GPIO_Driver.c":112 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 152 150 154 18 (set (reg:SI 2 r2 [orig:149 _40 ] [149])
        (not:SI (reg:SI 2 r2 [orig:148 _39 ] [148]))) "../GPIO/GPIO_Driver.c":112 157 {*arm_one_cmplsi2}
     (nil))
(insn 154 152 155 18 (set (reg:SI 2 r2 [orig:151 _42 ] [151])
        (and:SI (reg:SI 2 r2 [orig:150 _41 ] [150])
            (reg:SI 3 r3 [orig:146 _37 ] [146]))) "../GPIO/GPIO_Driver.c":112 82 {*arm_andsi3_insn}
     (nil))
(insn 155 154 156 18 (set (reg/f:SI 3 r3 [199])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":112 878 {*thumb2_movsi_insn}
     (nil))
(insn 156 155 157 18 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [199])
                (const_int 12 [0xc])) [7 gpiox_56(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:151 _42 ] [151])) "../GPIO/GPIO_Driver.c":112 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 1, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;;              9 [100.0%] 
;;              12 [100.0%] 
;;              14 [100.0%] 
;;              17
;;              16 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 152 153 154 155 156 157 160 200 201 202
(code_label 157 156 158 19 29 (nil) [5 uses])
(note 158 157 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 19 (set (reg:SI 4 r4 [orig:152 _43 ] [152])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 pin_CNF_MODE+0 S1 A8]))) "../GPIO/GPIO_Driver.c":118 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 160 159 161 19 (set (reg/f:SI 3 r3 [200])
        (mem/f/c:SI (reg/f:SI 7 r7) [5 pinConfig+0 S4 A32])) "../GPIO/GPIO_Driver.c":118 878 {*thumb2_movsi_insn}
     (nil))
(insn 161 160 162 19 (set (reg:SI 3 r3 [orig:153 _44 ] [153])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [200]) [1 pinConfig_55(D)->GPIO_PinNumber+0 S2 A16]))) "../GPIO/GPIO_Driver.c":118 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 162 161 163 19 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:153 _44 ] [153])) "../GPIO/GPIO_Driver.c":118 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 163 162 164 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getCRLHPinPos") [flags 0x3]  <function_decl 0000000006664c00 getCRLHPinPos>) [0 getCRLHPinPos S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../GPIO/GPIO_Driver.c":118 220 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (nil))))
(insn 164 163 165 19 (set (reg:SI 3 r3 [orig:154 _45 ] [154])
        (reg:SI 0 r0)) "../GPIO/GPIO_Driver.c":118 878 {*thumb2_movsi_insn}
     (nil))
(insn 165 164 166 19 (set (reg:SI 2 r2 [orig:160 _70 ] [160])
        (ashift:SI (reg:SI 4 r4 [orig:152 _43 ] [152])
            (reg:SI 3 r3 [orig:154 _45 ] [154]))) "../GPIO/GPIO_Driver.c":118 132 {*arm_shiftsi3}
     (nil))
(insn 166 165 167 19 (set (reg/f:SI 3 r3 [201])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 configReg+0 S4 A32])) "../GPIO/GPIO_Driver.c":118 878 {*thumb2_movsi_insn}
     (nil))
(insn 167 166 169 19 (set (reg:SI 3 r3 [orig:155 _46 ] [155])
        (mem/v:SI (reg/f:SI 3 r3 [201]) [7 *configReg_59+0 S4 A32])) "../GPIO/GPIO_Driver.c":118 878 {*thumb2_movsi_insn}
     (nil))
(insn 169 167 170 19 (set (reg:SI 2 r2 [orig:157 _48 ] [157])
        (ior:SI (reg:SI 2 r2 [orig:156 _47 ] [156])
            (reg:SI 3 r3 [orig:155 _46 ] [155]))) "../GPIO/GPIO_Driver.c":118 105 {*iorsi3_insn}
     (nil))
(insn 170 169 171 19 (set (reg/f:SI 3 r3 [202])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 configReg+0 S4 A32])) "../GPIO/GPIO_Driver.c":118 878 {*thumb2_movsi_insn}
     (nil))
(insn 171 170 174 19 (set (mem/v:SI (reg/f:SI 3 r3 [202]) [7 *configReg_59+0 S4 A32])
        (reg:SI 2 r2 [orig:157 _48 ] [157])) "../GPIO/GPIO_Driver.c":118 878 {*thumb2_movsi_insn}
     (nil))
(insn 174 171 185 19 (const_int 0 [0]) "../GPIO/GPIO_Driver.c":120 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 185 174 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_DeInit (MCAL_GPIO_DeInit, funcdef_no=2, decl_uid=4802, cgraph_uid=2, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 19:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 38:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 39:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 57:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 58:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 76:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 87:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 91:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 92:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 93:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 95:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 96:  (0) m  (1) l {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 13
EBB 12

********** Pseudo live ranges #1: **********

  BB 12
  BB 13
   Insn 113: point = 0, n_alt = -1
  BB 3
   Insn 101: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = 7
   Insn 19: point = 1, n_alt = 2
   Insn 18: point = 3, n_alt = 5
   Insn 17: point = 4, n_alt = 5
   Insn 16: point = 6, n_alt = 5
   Insn 15: point = 7, n_alt = 7
   Insn 14: point = 8, n_alt = 0
   Insn 13: point = 10, n_alt = 5
   Insn 12: point = 11, n_alt = 5
   Insn 11: point = 13, n_alt = 5
  BB 5
   Insn 103: point = 14, n_alt = -1
   Insn 39: point = 14, n_alt = 7
   Insn 38: point = 15, n_alt = 2
   Insn 37: point = 17, n_alt = 5
   Insn 36: point = 18, n_alt = 5
   Insn 35: point = 20, n_alt = 5
   Insn 34: point = 21, n_alt = 7
   Insn 33: point = 22, n_alt = 0
   Insn 32: point = 24, n_alt = 5
   Insn 31: point = 25, n_alt = 5
   Insn 30: point = 27, n_alt = 5
  BB 7
   Insn 105: point = 28, n_alt = -1
   Insn 58: point = 28, n_alt = 7
   Insn 57: point = 29, n_alt = 2
   Insn 56: point = 31, n_alt = 5
   Insn 55: point = 32, n_alt = 5
   Insn 54: point = 34, n_alt = 5
   Insn 53: point = 35, n_alt = 7
   Insn 52: point = 36, n_alt = 0
   Insn 51: point = 38, n_alt = 5
   Insn 50: point = 39, n_alt = 5
   Insn 49: point = 41, n_alt = 5
  BB 11
   Insn 96: point = 42, n_alt = 7
   Insn 95: point = 43, n_alt = 2
   Insn 94: point = 45, n_alt = 5
   Insn 93: point = 46, n_alt = 5
   Insn 92: point = 48, n_alt = 5
   Insn 91: point = 49, n_alt = 7
   Insn 90: point = 50, n_alt = 0
   Insn 89: point = 52, n_alt = 5
   Insn 88: point = 53, n_alt = 5
   Insn 87: point = 55, n_alt = 5
  BB 9
   Insn 107: point = 56, n_alt = -1
   Insn 77: point = 56, n_alt = 7
   Insn 76: point = 57, n_alt = 2
   Insn 75: point = 59, n_alt = 5
   Insn 74: point = 60, n_alt = 5
   Insn 73: point = 62, n_alt = 5
   Insn 72: point = 63, n_alt = 7
   Insn 71: point = 64, n_alt = 0
   Insn 70: point = 66, n_alt = 5
   Insn 69: point = 67, n_alt = 5
   Insn 68: point = 69, n_alt = 5
  BB 10
   Insn 85: point = 70, n_alt = -1
   Insn 84: point = 70, n_alt = 1
   Insn 83: point = 71, n_alt = 5
   Insn 82: point = 72, n_alt = 5
  BB 8
   Insn 66: point = 73, n_alt = -1
   Insn 65: point = 73, n_alt = 1
   Insn 64: point = 74, n_alt = 5
   Insn 63: point = 75, n_alt = 5
  BB 6
   Insn 47: point = 76, n_alt = -1
   Insn 46: point = 76, n_alt = 1
   Insn 45: point = 77, n_alt = 5
   Insn 44: point = 78, n_alt = 5
  BB 4
   Insn 28: point = 79, n_alt = -1
   Insn 27: point = 79, n_alt = 1
   Insn 26: point = 80, n_alt = 5
   Insn 25: point = 81, n_alt = 5
  BB 2
   Insn 9: point = 82, n_alt = -1
   Insn 8: point = 82, n_alt = 1
   Insn 7: point = 83, n_alt = 5
   Insn 6: point = 84, n_alt = 5
   Insn 2: point = 85, n_alt = 7
 r110: [12..13]
 r111: [9..11]
 r112: [7..10]
 r113: [7..8]
 r114: [5..6]
 r115: [2..4]
 r116: [0..3]
 r117: [0..1]
 r118: [26..27]
 r119: [23..25]
 r120: [21..24]
 r121: [21..22]
 r122: [19..20]
 r123: [16..18]
 r124: [14..17]
 r125: [14..15]
 r126: [40..41]
 r127: [37..39]
 r128: [35..38]
 r129: [35..36]
 r130: [33..34]
 r131: [30..32]
 r132: [28..31]
 r133: [28..29]
 r134: [68..69]
 r135: [65..67]
 r136: [63..66]
 r137: [63..64]
 r138: [61..62]
 r139: [58..60]
 r140: [56..59]
 r141: [56..57]
 r142: [54..55]
 r143: [51..53]
 r144: [49..52]
 r145: [49..50]
 r146: [47..48]
 r147: [44..46]
 r148: [42..45]
 r149: [42..43]
 r150: [82..84]
 r151: [82..83]
 r152: [79..81]
 r153: [79..80]
 r154: [76..78]
 r155: [76..77]
 r156: [73..75]
 r157: [73..74]
 r158: [70..72]
 r159: [70..71]
Compressing live ranges: from 85 to 70 - 82%
Ranges after the compression:
 r110: [10..11]
 r111: [8..9]
 r112: [6..9]
 r113: [6..7]
 r114: [4..5]
 r115: [2..3]
 r116: [0..3]
 r117: [0..1]
 r118: [22..23]
 r119: [20..21]
 r120: [18..21]
 r121: [18..19]
 r122: [16..17]
 r123: [14..15]
 r124: [12..15]
 r125: [12..13]
 r126: [34..35]
 r127: [32..33]
 r128: [30..33]
 r129: [30..31]
 r130: [28..29]
 r131: [26..27]
 r132: [24..27]
 r133: [24..25]
 r134: [58..59]
 r135: [56..57]
 r136: [54..57]
 r137: [54..55]
 r138: [52..53]
 r139: [50..51]
 r140: [48..51]
 r141: [48..49]
 r142: [46..47]
 r143: [44..45]
 r144: [42..45]
 r145: [42..43]
 r146: [40..41]
 r147: [38..39]
 r148: [36..39]
 r149: [36..37]
 r150: [68..69]
 r151: [68..69]
 r152: [66..67]
 r153: [66..67]
 r154: [64..65]
 r155: [64..65]
 r156: [62..63]
 r157: [62..63]
 r158: [60..61]
 r159: [60..61]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 20
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 38
changing reg in insn 37
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 52
changing reg in insn 51
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 58
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 71
changing reg in insn 70
changing reg in insn 72
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 87
changing reg in insn 88
changing reg in insn 88
changing reg in insn 90
changing reg in insn 89
changing reg in insn 91
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 95
changing reg in insn 94
changing reg in insn 96
changing reg in insn 95
changing reg in insn 96
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 25
changing reg in insn 27
changing reg in insn 26
changing reg in insn 27
changing reg in insn 44
changing reg in insn 46
changing reg in insn 45
changing reg in insn 46
changing reg in insn 63
changing reg in insn 65
changing reg in insn 64
changing reg in insn 65
changing reg in insn 82
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_DeInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={16d,15u} r3={36d,35u} r7={1d,19u} r12={1d} r13={1d,13u} r14={1d} r100={5d,5u} r102={1d,1u} 
;;    total ref usage 153{64d,89u,0e} in 76{76 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 150 151
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":131 878 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":141 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 r2 [151])
        (const_int 1073809408 [0x40010800])) "../GPIO/GPIO_Driver.c":141 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [150])
            (reg:SI 2 r2 [151]))) "../GPIO/GPIO_Driver.c":141 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "../GPIO/GPIO_Driver.c":141 204 {arm_cond_branch}
     (nil)
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110 111 112 113 114 115 116 117
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [orig:110 _1 ] [110])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":142 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:110 _1 ] [110])
                (const_int 12 [0xc])) [7 _1->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":142 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 2 r2 [orig:112 _3 ] [112])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":142 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (ior:SI (reg:SI 3 r3 [orig:111 _2 ] [111])
            (const_int 4 [0x4]))) "../GPIO/GPIO_Driver.c":142 105 {*iorsi3_insn}
     (nil))
(insn 15 14 16 3 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:112 _3 ] [112])
                (const_int 12 [0xc])) [7 _3->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:113 _4 ] [113])) "../GPIO/GPIO_Driver.c":142 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 3 r3 [orig:114 _5 ] [114])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":143 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:115 _6 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:114 _5 ] [114])
                (const_int 12 [0xc])) [7 _5->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":143 878 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg/f:SI 2 r2 [orig:116 _7 ] [116])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":143 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (reg:SI 3 r3 [orig:117 _8 ] [117])
        (and:SI (reg:SI 3 r3 [orig:115 _6 ] [115])
            (const_int -5 [0xfffffffffffffffb]))) "../GPIO/GPIO_Driver.c":143 82 {*arm_andsi3_insn}
     (nil))
(insn 20 19 101 3 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:116 _7 ] [116])
                (const_int 12 [0xc])) [7 _7->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _8 ] [117])) "../GPIO/GPIO_Driver.c":143 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 101 20 102 3 (set (pc)
        (label_ref:SI 112)) "../GPIO/GPIO_Driver.c":157 214 {*arm_jump}
     (nil)
 -> 112)
;;  succ:       13 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 102 101 23)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 152 153
(code_label 23 102 24 4 35 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 3 r3 [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":144 878 {*thumb2_movsi_insn}
     (nil))
(insn 26 25 27 4 (set (reg:SI 2 r2 [153])
        (const_int 1073810432 [0x40010c00])) "../GPIO/GPIO_Driver.c":144 878 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [152])
            (reg:SI 2 r2 [153]))) "../GPIO/GPIO_Driver.c":144 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "../GPIO/GPIO_Driver.c":144 204 {arm_cond_branch}
     (nil)
 -> 42)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118 119 120 121 122 123 124 125
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:SI 3 r3 [orig:118 _9 ] [118])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":145 878 {*thumb2_movsi_insn}
     (nil))
(insn 31 30 32 5 (set (reg:SI 3 r3 [orig:119 _10 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:118 _9 ] [118])
                (const_int 12 [0xc])) [7 _9->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":145 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 5 (set (reg/f:SI 2 r2 [orig:120 _11 ] [120])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":145 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 5 (set (reg:SI 3 r3 [orig:121 _12 ] [121])
        (ior:SI (reg:SI 3 r3 [orig:119 _10 ] [119])
            (const_int 8 [0x8]))) "../GPIO/GPIO_Driver.c":145 105 {*iorsi3_insn}
     (nil))
(insn 34 33 35 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:120 _11 ] [120])
                (const_int 12 [0xc])) [7 _11->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:121 _12 ] [121])) "../GPIO/GPIO_Driver.c":145 878 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 5 (set (reg/f:SI 3 r3 [orig:122 _13 ] [122])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":146 878 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 5 (set (reg:SI 3 r3 [orig:123 _14 ] [123])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:122 _13 ] [122])
                (const_int 12 [0xc])) [7 _13->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":146 878 {*thumb2_movsi_insn}
     (nil))
(insn 37 36 38 5 (set (reg/f:SI 2 r2 [orig:124 _15 ] [124])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":146 878 {*thumb2_movsi_insn}
     (nil))
(insn 38 37 39 5 (set (reg:SI 3 r3 [orig:125 _16 ] [125])
        (and:SI (reg:SI 3 r3 [orig:123 _14 ] [123])
            (const_int -9 [0xfffffffffffffff7]))) "../GPIO/GPIO_Driver.c":146 82 {*arm_andsi3_insn}
     (nil))
(insn 39 38 103 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:124 _15 ] [124])
                (const_int 12 [0xc])) [7 _15->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:125 _16 ] [125])) "../GPIO/GPIO_Driver.c":146 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 103 39 104 5 (set (pc)
        (label_ref:SI 112)) "../GPIO/GPIO_Driver.c":157 214 {*arm_jump}
     (nil)
 -> 112)
;;  succ:       13 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 104 103 42)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 154 155
(code_label 42 104 43 6 37 (nil) [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:SI 3 r3 [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":147 878 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 6 (set (reg:SI 2 r2 [155])
        (const_int 1073811456 [0x40011000])) "../GPIO/GPIO_Driver.c":147 878 {*thumb2_movsi_insn}
     (nil))
(insn 46 45 47 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [154])
            (reg:SI 2 r2 [155]))) "../GPIO/GPIO_Driver.c":147 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "../GPIO/GPIO_Driver.c":147 204 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126 127 128 129 130 131 132 133
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:SI 3 r3 [orig:126 _17 ] [126])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":148 878 {*thumb2_movsi_insn}
     (nil))
(insn 50 49 51 7 (set (reg:SI 3 r3 [orig:127 _18 ] [127])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:126 _17 ] [126])
                (const_int 12 [0xc])) [7 _17->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":148 878 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 7 (set (reg/f:SI 2 r2 [orig:128 _19 ] [128])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":148 878 {*thumb2_movsi_insn}
     (nil))
(insn 52 51 53 7 (set (reg:SI 3 r3 [orig:129 _20 ] [129])
        (ior:SI (reg:SI 3 r3 [orig:127 _18 ] [127])
            (const_int 16 [0x10]))) "../GPIO/GPIO_Driver.c":148 105 {*iorsi3_insn}
     (nil))
(insn 53 52 54 7 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:128 _19 ] [128])
                (const_int 12 [0xc])) [7 _19->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:129 _20 ] [129])) "../GPIO/GPIO_Driver.c":148 878 {*thumb2_movsi_insn}
     (nil))
(insn 54 53 55 7 (set (reg/f:SI 3 r3 [orig:130 _21 ] [130])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":149 878 {*thumb2_movsi_insn}
     (nil))
(insn 55 54 56 7 (set (reg:SI 3 r3 [orig:131 _22 ] [131])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:130 _21 ] [130])
                (const_int 12 [0xc])) [7 _21->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":149 878 {*thumb2_movsi_insn}
     (nil))
(insn 56 55 57 7 (set (reg/f:SI 2 r2 [orig:132 _23 ] [132])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":149 878 {*thumb2_movsi_insn}
     (nil))
(insn 57 56 58 7 (set (reg:SI 3 r3 [orig:133 _24 ] [133])
        (and:SI (reg:SI 3 r3 [orig:131 _22 ] [131])
            (const_int -17 [0xffffffffffffffef]))) "../GPIO/GPIO_Driver.c":149 82 {*arm_andsi3_insn}
     (nil))
(insn 58 57 105 7 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:132 _23 ] [132])
                (const_int 12 [0xc])) [7 _23->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:133 _24 ] [133])) "../GPIO/GPIO_Driver.c":149 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 105 58 106 7 (set (pc)
        (label_ref:SI 112)) "../GPIO/GPIO_Driver.c":157 214 {*arm_jump}
     (nil)
 -> 112)
;;  succ:       13 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 106 105 61)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 156 157
(code_label 61 106 62 8 38 (nil) [1 uses])
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 8 (set (reg:SI 3 r3 [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":150 878 {*thumb2_movsi_insn}
     (nil))
(insn 64 63 65 8 (set (reg:SI 2 r2 [157])
        (const_int 1073812480 [0x40011400])) "../GPIO/GPIO_Driver.c":150 878 {*thumb2_movsi_insn}
     (nil))
(insn 65 64 66 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [156])
            (reg:SI 2 r2 [157]))) "../GPIO/GPIO_Driver.c":150 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 66 65 67 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "../GPIO/GPIO_Driver.c":150 204 {arm_cond_branch}
     (nil)
 -> 80)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 9 (set (reg/f:SI 3 r3 [orig:134 _25 ] [134])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":151 878 {*thumb2_movsi_insn}
     (nil))
(insn 69 68 70 9 (set (reg:SI 3 r3 [orig:135 _26 ] [135])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:134 _25 ] [134])
                (const_int 12 [0xc])) [7 _25->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":151 878 {*thumb2_movsi_insn}
     (nil))
(insn 70 69 71 9 (set (reg/f:SI 2 r2 [orig:136 _27 ] [136])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":151 878 {*thumb2_movsi_insn}
     (nil))
(insn 71 70 72 9 (set (reg:SI 3 r3 [orig:137 _28 ] [137])
        (ior:SI (reg:SI 3 r3 [orig:135 _26 ] [135])
            (const_int 32 [0x20]))) "../GPIO/GPIO_Driver.c":151 105 {*iorsi3_insn}
     (nil))
(insn 72 71 73 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:136 _27 ] [136])
                (const_int 12 [0xc])) [7 _27->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:137 _28 ] [137])) "../GPIO/GPIO_Driver.c":151 878 {*thumb2_movsi_insn}
     (nil))
(insn 73 72 74 9 (set (reg/f:SI 3 r3 [orig:138 _29 ] [138])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":152 878 {*thumb2_movsi_insn}
     (nil))
(insn 74 73 75 9 (set (reg:SI 3 r3 [orig:139 _30 ] [139])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:138 _29 ] [138])
                (const_int 12 [0xc])) [7 _29->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":152 878 {*thumb2_movsi_insn}
     (nil))
(insn 75 74 76 9 (set (reg/f:SI 2 r2 [orig:140 _31 ] [140])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":152 878 {*thumb2_movsi_insn}
     (nil))
(insn 76 75 77 9 (set (reg:SI 3 r3 [orig:141 _32 ] [141])
        (and:SI (reg:SI 3 r3 [orig:139 _30 ] [139])
            (const_int -33 [0xffffffffffffffdf]))) "../GPIO/GPIO_Driver.c":152 82 {*arm_andsi3_insn}
     (nil))
(insn 77 76 107 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:140 _31 ] [140])
                (const_int 12 [0xc])) [7 _31->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:141 _32 ] [141])) "../GPIO/GPIO_Driver.c":152 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 107 77 108 9 (set (pc)
        (label_ref:SI 112)) "../GPIO/GPIO_Driver.c":157 214 {*arm_jump}
     (nil)
 -> 112)
;;  succ:       13 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 108 107 80)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 158 159
(code_label 80 108 81 10 39 (nil) [1 uses])
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 10 (set (reg:SI 3 r3 [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":153 878 {*thumb2_movsi_insn}
     (nil))
(insn 83 82 84 10 (set (reg:SI 2 r2 [159])
        (const_int 1073813504 [0x40011800])) "../GPIO/GPIO_Driver.c":153 878 {*thumb2_movsi_insn}
     (nil))
(insn 84 83 85 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [158])
            (reg:SI 2 r2 [159]))) "../GPIO/GPIO_Driver.c":153 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 85 84 86 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 112)
            (pc))) "../GPIO/GPIO_Driver.c":153 204 {arm_cond_branch}
     (nil)
 -> 112)
;;  succ:       11 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 142 143 144 145 146 147 148 149
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg/f:SI 3 r3 [orig:142 _33 ] [142])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":154 878 {*thumb2_movsi_insn}
     (nil))
(insn 88 87 89 11 (set (reg:SI 3 r3 [orig:143 _34 ] [143])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:142 _33 ] [142])
                (const_int 12 [0xc])) [7 _33->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":154 878 {*thumb2_movsi_insn}
     (nil))
(insn 89 88 90 11 (set (reg/f:SI 2 r2 [orig:144 _35 ] [144])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":154 878 {*thumb2_movsi_insn}
     (nil))
(insn 90 89 91 11 (set (reg:SI 3 r3 [orig:145 _36 ] [145])
        (ior:SI (reg:SI 3 r3 [orig:143 _34 ] [143])
            (const_int 64 [0x40]))) "../GPIO/GPIO_Driver.c":154 105 {*iorsi3_insn}
     (nil))
(insn 91 90 92 11 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:144 _35 ] [144])
                (const_int 12 [0xc])) [7 _35->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:145 _36 ] [145])) "../GPIO/GPIO_Driver.c":154 878 {*thumb2_movsi_insn}
     (nil))
(insn 92 91 93 11 (set (reg/f:SI 3 r3 [orig:146 _37 ] [146])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":155 878 {*thumb2_movsi_insn}
     (nil))
(insn 93 92 94 11 (set (reg:SI 3 r3 [orig:147 _38 ] [147])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:146 _37 ] [146])
                (const_int 12 [0xc])) [7 _37->APB2RSTR+0 S4 A32])) "../GPIO/GPIO_Driver.c":155 878 {*thumb2_movsi_insn}
     (nil))
(insn 94 93 95 11 (set (reg/f:SI 2 r2 [orig:148 _39 ] [148])
        (const_int 1073876992 [0x40021000])) "../GPIO/GPIO_Driver.c":155 878 {*thumb2_movsi_insn}
     (nil))
(insn 95 94 96 11 (set (reg:SI 3 r3 [orig:149 _40 ] [149])
        (and:SI (reg:SI 3 r3 [orig:147 _38 ] [147])
            (const_int -65 [0xffffffffffffffbf]))) "../GPIO/GPIO_Driver.c":155 82 {*arm_andsi3_insn}
     (nil))
(insn 96 95 112 11 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:148 _39 ] [148])
                (const_int 12 [0xc])) [7 _39->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:149 _40 ] [149])) "../GPIO/GPIO_Driver.c":155 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10
;;              9 [100.0%] 
;;              11 [100.0%]  (FALLTHRU)
;;              7 [100.0%] 
;;              5 [100.0%] 
;;              3 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 112 96 111 13 40 (nil) [5 uses])
(note 111 112 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 113 111 99 13 (const_int 0 [0]) "../GPIO/GPIO_Driver.c":157 236 {nop}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 99 113 100 12 34 (nil) [0 uses])
(note 100 99 139 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 139 100 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_ReadPin (MCAL_GPIO_ReadPin, funcdef_no=3, decl_uid=4805, cgraph_uid=3, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 12
	 Choosing alt 1 in insn 12:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 29: point = 0, n_alt = -1
   Insn 28: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = -2
  BB 3
   Insn 31: point = 4, n_alt = -1
   Insn 16: point = 4, n_alt = 1
  BB 4
   Insn 21: point = 5, n_alt = 1
  BB 2
   Insn 14: point = 6, n_alt = -1
   Insn 13: point = 6, n_alt = 0
   Insn 12: point = 7, n_alt = 1
   Insn 11: point = 9, n_alt = 1
   Insn 10: point = 10, n_alt = 5
   Insn 9: point = 12, n_alt = 5
   Insn 5: point = 13, n_alt = 4
   Insn 4: point = 14, n_alt = 0
   Insn 3: point = 16, n_alt = -2
   Insn 2: point = 17, n_alt = 7
 r110: [8..10]
 r111: [8..9]
 r112: [6..7]
 r113: [2..5]
 r114: [0..1]
 r115: [15..16]
 r116: [13..14]
 r117: [11..12]
Compressing live ranges: from 17 to 14 - 82%
Ranges after the compression:
 r110: [6..7]
 r111: [6..7]
 r112: [4..5]
 r113: [2..3]
 r114: [0..1]
 r115: [12..13]
 r116: [10..11]
 r117: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 21
changing reg in insn 16
changing reg in insn 24
changing reg in insn 24
changing reg in insn 28
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
deleting insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_ReadPin

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={2d,1u} r3={8d,6u} r7={1d,9u} r12={1d} r13={1d,5u} r14={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 46{19d,27u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 110 111 112 115 116 117
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":168 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:SI 3 r3 [115])
        (reg:SI 1 r1 [ pinNum ])) "../GPIO/GPIO_Driver.c":168 878 {*thumb2_movsi_insn}
     (nil))
(insn 4 3 5 2 (set (reg:HI 3 r3 [116])
        (reg:HI 3 r3 [115])) "../GPIO/GPIO_Driver.c":168 880 {*thumb2_movhi_insn}
     (nil))
(insn 5 4 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [1 pinNum+0 S2 A16])
        (reg:HI 3 r3 [116])) "../GPIO/GPIO_Driver.c":168 880 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 3 r3 [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":169 878 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [orig:110 _1 ] [110])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [117])
                (const_int 8 [0x8])) [7 gpiox_6(D)->IDR+0 S4 A32])) "../GPIO/GPIO_Driver.c":169 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [1 pinNum+0 S2 A16]))) "../GPIO/GPIO_Driver.c":169 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:112 _3 ] [112])
        (and:SI (reg:SI 3 r3 [orig:111 _2 ] [111])
            (reg:SI 2 r2 [orig:110 _1 ] [110]))) "../GPIO/GPIO_Driver.c":169 82 {*arm_andsi3_insn}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:112 _3 ] [112])
            (const_int 0 [0]))) "../GPIO/GPIO_Driver.c":169 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "../GPIO/GPIO_Driver.c":169 204 {arm_cond_branch}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 31 3 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (const_int 1 [0x1])) "../GPIO/GPIO_Driver.c":170 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 31 16 32 3 (set (pc)
        (label_ref 22)) "../GPIO/GPIO_Driver.c":170 214 {*arm_jump}
     (nil)
 -> 22)
;;  succ:       5 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

(barrier 32 31 19)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113
(code_label 19 32 20 4 44 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (const_int 0 [0])) "../GPIO/GPIO_Driver.c":172 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 0 [r0] 114
(code_label 22 21 23 5 45 (nil) [1 uses])
(note 23 22 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 23 29 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../GPIO/GPIO_Driver.c":174 878 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 33 5 (use (reg/i:SI 0 r0)) "../GPIO/GPIO_Driver.c":174 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 33 29 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_ReadPort (MCAL_GPIO_ReadPort, funcdef_no=4, decl_uid=4807, cgraph_uid=4, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = 0
   Insn 7: point = 5, n_alt = 5
   Insn 6: point = 7, n_alt = 5
   Insn 2: point = 8, n_alt = 7
 r110: [4..5]
 r111: [2..3]
 r112: [0..1]
 r113: [6..7]
Compressing live ranges: from 8 to 8 - 100%
Ranges after the compression:
 r110: [4..5]
 r111: [2..3]
 r112: [0..1]
 r113: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_ReadPort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={4d,3u} r7={1d,4u} r12={1d} r13={1d,2u} r14={1d} r102={1d,1u} 
;;    total ref usage 26{13d,13u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 110 111 112 113
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":184 878 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":185 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [113])
                (const_int 8 [0x8])) [7 gpiox_3(D)->IDR+0 S4 A32])) "../GPIO/GPIO_Driver.c":185 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 15 2 (set (reg:SI 3 r3 [orig:111 _4 ] [111])
        (zero_extend:SI (reg:HI 3 r3 [orig:110 _1 ] [110]))) "../GPIO/GPIO_Driver.c":185 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 15 8 16 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:112 <retval> ] [112])) "../GPIO/GPIO_Driver.c":186 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 18 2 (use (reg/i:SI 0 r0)) "../GPIO/GPIO_Driver.c":186 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 18 16 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_WritePin (MCAL_GPIO_WritePin, funcdef_no=5, decl_uid=4811, cgraph_uid=5, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 21:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =l  (1) l {*arm_one_cmplsi2}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 31
	 Choosing alt 1 in insn 31:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 33:  (0) m  (1) l {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 41: point = 0, n_alt = -1
  BB 3
   Insn 38: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = 7
   Insn 20: point = 1, n_alt = 5
   Insn 19: point = 2, n_alt = 1
   Insn 18: point = 4, n_alt = 1
   Insn 17: point = 5, n_alt = 5
   Insn 16: point = 7, n_alt = 5
  BB 4
   Insn 33: point = 8, n_alt = 7
   Insn 32: point = 9, n_alt = 5
   Insn 31: point = 10, n_alt = 1
   Insn 30: point = 12, n_alt = -2
   Insn 29: point = 14, n_alt = 0
   Insn 28: point = 16, n_alt = 1
   Insn 27: point = 17, n_alt = 5
   Insn 26: point = 19, n_alt = 5
  BB 2
   Insn 14: point = 20, n_alt = -1
   Insn 13: point = 20, n_alt = 0
   Insn 12: point = 21, n_alt = 1
   Insn 8: point = 22, n_alt = 6
   Insn 7: point = 23, n_alt = 0
   Insn 5: point = 25, n_alt = 4
   Insn 4: point = 26, n_alt = 0
   Insn 6: point = 28, n_alt = -2
   Insn 3: point = 29, n_alt = -2
   Insn 2: point = 30, n_alt = 7
 r110: [3..5]
 r111: [3..4]
 r112: [0..2]
 r113: [11..17]
 r114: [15..16]
 r115: [13..14]
 r116: [11..12]
 r117: [8..10]
 r118: [27..29]
 r119: [25..26]
 r120: [24..28]
 r121: [22..23]
 r122: [20..21]
 r123: [6..7]
 r124: [0..1]
 r125: [18..19]
 r126: [8..9]
Compressing live ranges: from 30 to 24 - 80%
Ranges after the compression:
 r110: [2..3]
 r111: [2..3]
 r112: [0..1]
 r113: [8..13]
 r114: [12..13]
 r115: [10..11]
 r116: [8..9]
 r117: [6..7]
 r118: [22..23]
 r119: [20..21]
 r120: [20..23]
 r121: [18..19]
 r122: [16..17]
 r123: [4..5]
 r124: [0..1]
 r125: [14..15]
 r126: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 21
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 20
changing reg in insn 21
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 33
deleting insn with uid = 6.
deleting insn with uid = 30.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_WritePin

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={6d,6u} r3={11d,10u} r7={1d,16u} r12={1d} r13={1d,6u} r14={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 67{25d,42u,0e} in 24{24 regular + 0 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 118 119 120 121 122
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":197 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:SI 3 r3 [118])
        (reg:SI 1 r1 [ pinNum ])) "../GPIO/GPIO_Driver.c":197 878 {*thumb2_movsi_insn}
     (nil))
(insn 4 3 5 2 (set (reg:HI 3 r3 [119])
        (reg:HI 3 r3 [118])) "../GPIO/GPIO_Driver.c":197 880 {*thumb2_movhi_insn}
     (nil))
(insn 5 4 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [1 pinNum+0 S2 A16])
        (reg:HI 3 r3 [119])) "../GPIO/GPIO_Driver.c":197 880 {*thumb2_movhi_insn}
     (nil))
(insn 7 5 8 2 (set (reg:QI 3 r3 [121])
        (reg:QI 2 r2 [120])) "../GPIO/GPIO_Driver.c":197 192 {*arm_movqi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 1 [0x1])) [0 value+0 S1 A8])
        (reg:QI 3 r3 [121])) "../GPIO/GPIO_Driver.c":197 192 {*arm_movqi_insn}
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg:SI 3 r3 [122])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 1 [0x1])) [0 value+0 S1 A8]))) "../GPIO/GPIO_Driver.c":198 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [122])
            (const_int 1 [0x1]))) "../GPIO/GPIO_Driver.c":198 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "../GPIO/GPIO_Driver.c":198 204 {arm_cond_branch}
     (nil)
 -> 24)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110 111 112 123 124
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":199 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 2 r2 [orig:110 _1 ] [110])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [123])
                (const_int 12 [0xc])) [7 gpiox_12(D)->ODR+0 S4 A32])) "../GPIO/GPIO_Driver.c":199 878 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [1 pinNum+0 S2 A16]))) "../GPIO/GPIO_Driver.c":199 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 19 18 20 3 (set (reg:SI 2 r2 [orig:112 _3 ] [112])
        (ior:SI (reg:SI 2 r2 [orig:110 _1 ] [110])
            (reg:SI 3 r3 [orig:111 _2 ] [111]))) "../GPIO/GPIO_Driver.c":199 105 {*iorsi3_insn}
     (nil))
(insn 20 19 21 3 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":199 878 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 38 3 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [124])
                (const_int 12 [0xc])) [7 gpiox_12(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:112 _3 ] [112])) "../GPIO/GPIO_Driver.c":199 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 38 21 39 3 (set (pc)
        (label_ref:SI 42)) "../GPIO/GPIO_Driver.c":207 214 {*arm_jump}
     (nil)
 -> 42)
;;  succ:       6 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 39 38 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 125 126
(code_label 24 39 25 4 49 (nil) [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":203 878 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 4 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 12 [0xc])) [7 gpiox_12(D)->ODR+0 S4 A32])) "../GPIO/GPIO_Driver.c":203 878 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 4 (set (reg:SI 2 r2 [orig:114 _5 ] [114])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [1 pinNum+0 S2 A16]))) "../GPIO/GPIO_Driver.c":203 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 29 28 31 4 (set (reg:SI 2 r2 [orig:115 _6 ] [115])
        (not:SI (reg:SI 2 r2 [orig:114 _5 ] [114]))) "../GPIO/GPIO_Driver.c":203 157 {*arm_one_cmplsi2}
     (nil))
(insn 31 29 32 4 (set (reg:SI 2 r2 [orig:117 _8 ] [117])
        (and:SI (reg:SI 2 r2 [orig:116 _7 ] [116])
            (reg:SI 3 r3 [orig:113 _4 ] [113]))) "../GPIO/GPIO_Driver.c":203 82 {*arm_andsi3_insn}
     (nil))
(insn 32 31 33 4 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":203 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 42 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [126])
                (const_int 12 [0xc])) [7 gpiox_12(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:117 _8 ] [117])) "../GPIO/GPIO_Driver.c":203 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 42 33 40 6 51 (nil) [1 uses])
(note 40 42 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 36 6 (const_int 0 [0]) "../GPIO/GPIO_Driver.c":207 236 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 36 41 37 5 48 (nil) [0 uses])
(note 37 36 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 43 37 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_WritePort (MCAL_GPIO_WritePort, funcdef_no=6, decl_uid=4814, cgraph_uid=6, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 14: point = 0, n_alt = -1
   Insn 11: point = 0, n_alt = 7
   Insn 10: point = 1, n_alt = 5
   Insn 9: point = 2, n_alt = 1
   Insn 5: point = 3, n_alt = 4
   Insn 4: point = 4, n_alt = 0
   Insn 3: point = 6, n_alt = -2
   Insn 2: point = 7, n_alt = 7
 r110: [0..2]
 r111: [5..6]
 r112: [3..4]
 r113: [0..1]
Compressing live ranges: from 7 to 6 - 85%
Ranges after the compression:
 r110: [0..1]
 r111: [4..5]
 r112: [2..3]
 r113: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 9
changing reg in insn 11
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 10
changing reg in insn 11
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_WritePort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={2d,1u} r3={4d,3u} r7={1d,6u} r12={1d} r13={1d,2u} r14={1d} r102={1d,1u} 
;;    total ref usage 28{13d,15u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110 111 112 113
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":216 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:SI 3 r3 [111])
        (reg:SI 1 r1 [ value ])) "../GPIO/GPIO_Driver.c":216 878 {*thumb2_movsi_insn}
     (nil))
(insn 4 3 5 2 (set (reg:HI 3 r3 [112])
        (reg:HI 3 r3 [111])) "../GPIO/GPIO_Driver.c":216 880 {*thumb2_movhi_insn}
     (nil))
(insn 5 4 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [1 value+0 S2 A16])
        (reg:HI 3 r3 [112])) "../GPIO/GPIO_Driver.c":216 880 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 2 r2 [orig:110 _1 ] [110])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [1 value+0 S2 A16]))) "../GPIO/GPIO_Driver.c":217 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":217 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 14 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [113])
                (const_int 12 [0xc])) [7 gpiox_4(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:110 _1 ] [110])) "../GPIO/GPIO_Driver.c":217 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 11 15 2 (const_int 0 [0]) "../GPIO/GPIO_Driver.c":218 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 15 14 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_TogglePin (MCAL_GPIO_TogglePin, funcdef_no=7, decl_uid=4817, cgraph_uid=7, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) l  (1) 0  (2) l {*arm_xorsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = 7
   Insn 13: point = 1, n_alt = 5
   Insn 12: point = 2, n_alt = 1
   Insn 11: point = 4, n_alt = 1
   Insn 10: point = 5, n_alt = 5
   Insn 9: point = 7, n_alt = 5
   Insn 5: point = 8, n_alt = 4
   Insn 4: point = 9, n_alt = 0
   Insn 3: point = 11, n_alt = -2
   Insn 2: point = 12, n_alt = 7
 r110: [3..5]
 r111: [3..4]
 r112: [0..2]
 r113: [10..11]
 r114: [8..9]
 r115: [6..7]
 r116: [0..1]
Compressing live ranges: from 12 to 10 - 83%
Ranges after the compression:
 r110: [2..3]
 r111: [2..3]
 r112: [0..1]
 r113: [8..9]
 r114: [6..7]
 r115: [4..5]
 r116: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 12
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_TogglePin

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={3d,2u} r3={6d,5u} r7={1d,7u} r12={1d} r13={1d,2u} r14={1d} r102={1d,1u} 
;;    total ref usage 35{16d,19u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110 111 112 113 114 115 116
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":229 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:SI 3 r3 [113])
        (reg:SI 1 r1 [ pinNum ])) "../GPIO/GPIO_Driver.c":229 878 {*thumb2_movsi_insn}
     (nil))
(insn 4 3 5 2 (set (reg:HI 3 r3 [114])
        (reg:HI 3 r3 [113])) "../GPIO/GPIO_Driver.c":229 880 {*thumb2_movhi_insn}
     (nil))
(insn 5 4 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [1 pinNum+0 S2 A16])
        (reg:HI 3 r3 [114])) "../GPIO/GPIO_Driver.c":229 880 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 3 r3 [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":230 878 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [orig:110 _1 ] [110])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [115])
                (const_int 12 [0xc])) [7 gpiox_5(D)->ODR+0 S4 A32])) "../GPIO/GPIO_Driver.c":230 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [1 pinNum+0 S2 A16]))) "../GPIO/GPIO_Driver.c":230 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2 [orig:112 _3 ] [112])
        (xor:SI (reg:SI 2 r2 [orig:110 _1 ] [110])
            (reg:SI 3 r3 [orig:111 _2 ] [111]))) "../GPIO/GPIO_Driver.c":230 111 {*arm_xorsi3}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":230 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 17 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [116])
                (const_int 12 [0xc])) [7 gpiox_5(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:112 _3 ] [112])) "../GPIO/GPIO_Driver.c":230 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 14 18 2 (const_int 0 [0]) "../GPIO/GPIO_Driver.c":231 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 18 17 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_LockPin (MCAL_GPIO_LockPin, funcdef_no=8, decl_uid=4871, cgraph_uid=8, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 13
	 Choosing alt 1 in insn 13:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 17:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 23:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 43: point = 0, n_alt = -1
   Insn 42: point = 0, n_alt = -2
   Insn 38: point = 1, n_alt = -2
  BB 3
   Insn 45: point = 4, n_alt = -1
   Insn 30: point = 4, n_alt = 1
  BB 4
   Insn 35: point = 5, n_alt = 1
  BB 2
   Insn 28: point = 6, n_alt = -1
   Insn 27: point = 6, n_alt = 0
   Insn 26: point = 7, n_alt = 0
   Insn 25: point = 9, n_alt = 5
   Insn 24: point = 11, n_alt = 5
   Insn 23: point = 12, n_alt = 7
   Insn 22: point = 13, n_alt = 5
   Insn 21: point = 15, n_alt = 5
   Insn 20: point = 16, n_alt = 7
   Insn 19: point = 17, n_alt = 5
   Insn 18: point = 18, n_alt = 1
   Insn 17: point = 19, n_alt = 7
   Insn 16: point = 20, n_alt = 5
   Insn 15: point = 21, n_alt = 5
   Insn 14: point = 22, n_alt = 7
   Insn 13: point = 23, n_alt = 1
   Insn 12: point = 25, n_alt = 5
   Insn 11: point = 26, n_alt = 1
   Insn 10: point = 27, n_alt = 7
   Insn 9: point = 28, n_alt = 1
   Insn 5: point = 29, n_alt = 4
   Insn 4: point = 30, n_alt = 0
   Insn 3: point = 32, n_alt = -2
   Insn 2: point = 33, n_alt = 7
 r110: [24..26]
 r111: [24..25]
 r112: [22..23]
 r113: [19..21]
 r114: [16..18]
 r115: [12..13]
 r116: [8..9]
 r117: [6..7]
 r118: [2..5]
 r119: [0..1]
 r120: [31..32]
 r121: [29..30]
 r122: [27..28]
 r123: [19..20]
 r124: [16..17]
 r125: [14..15]
 r126: [10..11]
Compressing live ranges: from 33 to 28 - 84%
Ranges after the compression:
 r110: [20..21]
 r111: [20..21]
 r112: [18..19]
 r113: [16..17]
 r114: [14..15]
 r115: [10..11]
 r116: [6..7]
 r117: [4..5]
 r118: [2..3]
 r119: [0..1]
 r120: [26..27]
 r121: [24..25]
 r122: [22..23]
 r123: [16..17]
 r124: [14..15]
 r125: [12..13]
 r126: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 35
changing reg in insn 30
changing reg in insn 38
changing reg in insn 38
changing reg in insn 42
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_LockPin

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={4d,3u} r3={15d,13u} r7={1d,18u} r12={1d} r13={1d,5u} r14={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 73{28d,45u,0e} in 29{29 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 110 111 112 113 114 115 116 117 120 121 122 123 124 125 126
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])
        (reg:SI 0 r0 [ gpiox ])) "../GPIO/GPIO_Driver.c":242 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:SI 3 r3 [120])
        (reg:SI 1 r1 [ pinNum ])) "../GPIO/GPIO_Driver.c":242 878 {*thumb2_movsi_insn}
     (nil))
(insn 4 3 5 2 (set (reg:HI 3 r3 [121])
        (reg:HI 3 r3 [120])) "../GPIO/GPIO_Driver.c":242 880 {*thumb2_movhi_insn}
     (nil))
(insn 5 4 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [1 pinNum+0 S2 A16])
        (reg:HI 3 r3 [121])) "../GPIO/GPIO_Driver.c":242 880 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 3 r3 [122])
        (const_int 65536 [0x10000])) "../GPIO/GPIO_Driver.c":243 878 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])
        (reg:SI 3 r3 [122])) "../GPIO/GPIO_Driver.c":243 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 r2 [orig:110 _1 ] [110])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [1 pinNum+0 S2 A16]))) "../GPIO/GPIO_Driver.c":244 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:111 tmp.2_2 ] [111])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "../GPIO/GPIO_Driver.c":244 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:112 _3 ] [112])
        (ior:SI (reg:SI 3 r3 [orig:111 tmp.2_2 ] [111])
            (reg:SI 2 r2 [orig:110 _1 ] [110]))) "../GPIO/GPIO_Driver.c":244 105 {*iorsi3_insn}
     (nil))
(insn 14 13 15 2 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])
        (reg:SI 3 r3 [orig:112 _3 ] [112])) "../GPIO/GPIO_Driver.c":244 878 {*thumb2_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 2 r2 [orig:113 tmp.3_4 ] [113])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])) "../GPIO/GPIO_Driver.c":246 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":246 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [123])
                (const_int 24 [0x18])) [7 gpiox_14(D)->LCKR+0 S4 A32])
        (reg:SI 2 r2 [orig:113 tmp.3_4 ] [113])) "../GPIO/GPIO_Driver.c":246 878 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 2 r2 [orig:114 _5 ] [114])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [1 pinNum+0 S2 A16]))) "../GPIO/GPIO_Driver.c":248 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":248 878 {*thumb2_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [124])
                (const_int 24 [0x18])) [7 gpiox_14(D)->LCKR+0 S4 A32])
        (reg:SI 2 r2 [orig:114 _5 ] [114])) "../GPIO/GPIO_Driver.c":248 878 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":250 878 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:SI 3 r3 [orig:115 _6 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 24 [0x18])) [7 gpiox_14(D)->LCKR+0 S4 A32])) "../GPIO/GPIO_Driver.c":250 878 {*thumb2_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [7 tmp+0 S4 A32])
        (reg:SI 3 r3 [orig:115 _6 ] [115])) "../GPIO/GPIO_Driver.c":250 878 {*thumb2_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [4 gpiox+0 S4 A32])) "../GPIO/GPIO_Driver.c":252 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:SI 3 r3 [orig:116 _7 ] [116])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [126])
                (const_int 24 [0x18])) [7 gpiox_14(D)->LCKR+0 S4 A32])) "../GPIO/GPIO_Driver.c":252 878 {*thumb2_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 3 r3 [orig:117 _8 ] [117])
        (and:SI (reg:SI 3 r3 [orig:116 _7 ] [116])
            (const_int 65536 [0x10000]))) "../GPIO/GPIO_Driver.c":252 82 {*arm_andsi3_insn}
     (nil))
(insn 27 26 28 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 _8 ] [117])
            (const_int 0 [0]))) "../GPIO/GPIO_Driver.c":252 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "../GPIO/GPIO_Driver.c":252 204 {arm_cond_branch}
     (nil)
 -> 33)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118
(note 29 28 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 45 3 (set (reg:SI 3 r3 [orig:118 _9 ] [118])
        (const_int 1 [0x1])) "../GPIO/GPIO_Driver.c":253 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 45 30 46 3 (set (pc)
        (label_ref 36)) "../GPIO/GPIO_Driver.c":253 214 {*arm_jump}
     (nil)
 -> 36)
;;  succ:       5 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118

(barrier 46 45 33)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118
(code_label 33 46 34 4 55 (nil) [1 uses])
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg:SI 3 r3 [orig:118 _9 ] [118])
        (const_int 0 [0])) "../GPIO/GPIO_Driver.c":255 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118
;; lr  def 	 0 [r0] 119
(code_label 36 35 37 5 56 (nil) [1 uses])
(note 37 36 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 37 43 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "../GPIO/GPIO_Driver.c":257 878 {*thumb2_movsi_insn}
     (nil))
(insn 43 42 47 5 (use (reg/i:SI 0 r0)) "../GPIO/GPIO_Driver.c":257 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 47 43 0 NOTE_INSN_DELETED)
