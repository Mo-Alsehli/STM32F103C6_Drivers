
;; Function clockInit (clockInit, funcdef_no=0, decl_uid=4821, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a1 (r117,l0) best LO_REGS, allocno LO_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a0 (r116,l0) best LO_REGS, allocno LO_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a2 (r115,l0) best LO_REGS, allocno LO_REGS
    r114: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a3 (r114,l0) best LO_REGS, allocno LO_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a5 (r113,l0) best LO_REGS, allocno LO_REGS
    r112: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a4 (r112,l0) best LO_REGS, allocno LO_REGS
    r111: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a6 (r111,l0) best LO_REGS, allocno LO_REGS
    r110: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a7 (r110,l0) best LO_REGS, allocno LO_REGS

  a0(r116,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15
  a1(r117,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a2(r115,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a3(r114,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15
  a4(r112,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15
  a5(r113,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a6(r111,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a7(r110,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 5(l0): point = 20
 a0(r116): [3..6]
 a1(r117): [3..4]
 a2(r115): [5..8]
 a3(r114): [9..10]
 a4(r112): [13..16]
 a5(r113): [13..14]
 a6(r111): [15..18]
 a7(r110): [19..20]
Compressing live ranges: from 23 to 12 - 52%
Ranges after the compression:
 a0(r116): [0..3]
 a1(r117): [0..1]
 a2(r115): [2..3]
 a3(r114): [4..5]
 a4(r112): [6..9]
 a5(r113): [6..7]
 a6(r111): [8..9]
 a7(r110): [10..11]
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r110 l0     3    6:r111 l0     3    4:r112 l0     2    5:r113 l0     3
    3:r114 l0     3    2:r115 l0     3    0:r116 l0     2    1:r117 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


clockInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,2u} r12={1d} r13={1d,2u} r14={1d} r102={1d,2u} r103={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 33{18d,15u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110 111 112 113 114 115 116 117
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 110 [ _1 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 111 [ _2 ])
        (mem/v:SI (plus:SI (reg/f:SI 110 [ _1 ])
                (const_int 24 [0x18])) [2 _1->APB2ENR+0 S4 A32])) "../Src/main.c":16 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 110 [ _1 ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 112 [ _3 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 113 [ _4 ])
        (ior:SI (reg:SI 111 [ _2 ])
            (const_int 4 [0x4]))) "../Src/main.c":16 105 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 111 [ _2 ])
        (nil)))
(insn 9 8 10 2 (set (mem/v:SI (plus:SI (reg/f:SI 112 [ _3 ])
                (const_int 24 [0x18])) [2 _3->APB2ENR+0 S4 A32])
        (reg:SI 113 [ _4 ])) "../Src/main.c":16 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _4 ])
        (expr_list:REG_DEAD (reg/f:SI 112 [ _3 ])
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 114 [ _5 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":17 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 115 [ _6 ])
        (mem/v:SI (plus:SI (reg/f:SI 114 [ _5 ])
                (const_int 24 [0x18])) [2 _5->APB2ENR+0 S4 A32])) "../Src/main.c":17 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _5 ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 116 [ _7 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":17 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 117 [ _8 ])
        (ior:SI (reg:SI 115 [ _6 ])
            (const_int 8 [0x8]))) "../Src/main.c":17 105 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ _6 ])
        (nil)))
(insn 14 13 17 2 (set (mem/v:SI (plus:SI (reg/f:SI 116 [ _7 ])
                (const_int 24 [0x18])) [2 _7->APB2ENR+0 S4 A32])
        (reg:SI 117 [ _8 ])) "../Src/main.c":17 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _8 ])
        (expr_list:REG_DEAD (reg/f:SI 116 [ _7 ])
            (nil))))
(insn 17 14 0 2 (const_int 0 [0]) "../Src/main.c":18 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]


;; Function gpioInit (gpioInit, funcdef_no=1, decl_uid=4823, cgraph_uid=1, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 50.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a1(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a2(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a3(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a4(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a5(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a6(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a7(r126,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a8(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a9(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a10(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a11(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a12(r121,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a13(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a14(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a15(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a16(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a17(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a18(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a19(r114,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a20(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a21(r112,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a22(r110,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a23(r111,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6

   Insn 53(l0): point = 0
   Insn 50(l0): point = 2
   Insn 49(l0): point = 4
   Insn 48(l0): point = 6
   Insn 47(l0): point = 8
   Insn 46(l0): point = 10
   Insn 45(l0): point = 12
   Insn 44(l0): point = 14
   Insn 43(l0): point = 16
   Insn 42(l0): point = 18
   Insn 41(l0): point = 20
   Insn 40(l0): point = 22
   Insn 39(l0): point = 24
   Insn 38(l0): point = 26
   Insn 37(l0): point = 28
   Insn 36(l0): point = 30
   Insn 35(l0): point = 32
   Insn 34(l0): point = 34
   Insn 33(l0): point = 36
   Insn 32(l0): point = 38
   Insn 31(l0): point = 40
   Insn 30(l0): point = 42
   Insn 29(l0): point = 44
   Insn 28(l0): point = 46
   Insn 27(l0): point = 48
   Insn 26(l0): point = 50
   Insn 25(l0): point = 52
   Insn 24(l0): point = 54
   Insn 23(l0): point = 56
   Insn 22(l0): point = 58
   Insn 21(l0): point = 60
   Insn 20(l0): point = 62
   Insn 19(l0): point = 64
   Insn 18(l0): point = 66
   Insn 17(l0): point = 68
   Insn 16(l0): point = 70
   Insn 15(l0): point = 72
   Insn 14(l0): point = 74
   Insn 13(l0): point = 76
   Insn 12(l0): point = 78
   Insn 11(l0): point = 80
   Insn 10(l0): point = 82
   Insn 9(l0): point = 84
   Insn 8(l0): point = 86
   Insn 7(l0): point = 88
   Insn 6(l0): point = 90
   Insn 5(l0): point = 92
 a0(r133): [7..8]
 a1(r132): [11..12]
 a2(r131): [13..14]
 a3(r130): [17..18]
 a4(r129): [19..20]
 a5(r127): [23..24]
 a6(r128): [25..26]
 a7(r126): [33..34]
 a8(r125): [37..38]
 a9(r124): [39..40]
 a10(r122): [43..44]
 a11(r123): [45..46]
 a12(r121): [53..54]
 a13(r120): [57..58]
 a14(r119): [59..60]
 a15(r118): [63..64]
 a16(r117): [65..66]
 a17(r115): [69..70]
 a18(r116): [71..72]
 a19(r114): [79..80]
 a20(r113): [83..84]
 a21(r112): [85..86]
 a22(r110): [89..90]
 a23(r111): [91..92]
Compressing live ranges: from 95 to 48 - 50%
Ranges after the compression:
 a0(r133): [0..1]
 a1(r132): [2..3]
 a2(r131): [4..5]
 a3(r130): [6..7]
 a4(r129): [8..9]
 a5(r127): [10..11]
 a6(r128): [12..13]
 a7(r126): [14..15]
 a8(r125): [16..17]
 a9(r124): [18..19]
 a10(r122): [20..21]
 a11(r123): [22..23]
 a12(r121): [24..25]
 a13(r120): [26..27]
 a14(r119): [28..29]
 a15(r118): [30..31]
 a16(r117): [32..33]
 a17(r115): [34..35]
 a18(r116): [36..37]
 a19(r114): [38..39]
 a20(r113): [40..41]
 a21(r112): [42..43]
 a22(r110): [44..45]
 a23(r111): [46..47]
  regions=1, blocks=3, points=48
    allocnos=24 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
   22:r110 l0     3   23:r111 l0     3   21:r112 l0     3   20:r113 l0     3
   19:r114 l0     3   17:r115 l0     3   18:r116 l0     3   16:r117 l0     3
   15:r118 l0     3   14:r119 l0     3   13:r120 l0     3   12:r121 l0     3
   10:r122 l0     3   11:r123 l0     3    9:r124 l0     3    8:r125 l0     3
    7:r126 l0     3    5:r127 l0     3    6:r128 l0     3    4:r129 l0     3
    3:r130 l0     3    2:r131 l0     3    1:r132 l0     3    0:r133 l0     3
+++Costs: overall 8, reg 8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


gpioInit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={9d,4u} r1={9d,4u} r2={5d} r3={5d} r7={1d,2u} r12={9d} r13={1d,6u} r14={5d} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={1d,16u} r103={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} 
;;    total ref usage 475{418d,57u,0e} in 47{43 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 111)
        (const_int 2 [0x2])) "../Src/main.c":24 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:HI 110)
        (subreg:HI (reg:SI 111) 0)) "../Src/main.c":24 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))
(insn 7 6 8 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 110)) "../Src/main.c":24 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 110)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 112)
        (const_int 2 [0x2])) "../Src/main.c":25 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:QI 113)
        (subreg:QI (reg:SI 112) 0)) "../Src/main.c":25 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 10 9 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 113)) "../Src/main.c":25 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 113)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 114)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":27 4 {*arm_addsi3}
     (nil))
(insn 12 11 13 2 (set (reg:SI 1 r1)
        (reg:SI 114)) "../Src/main.c":27 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":27 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 14 13 15 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":27 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 116)
        (const_int 2 [0x2])) "../Src/main.c":30 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:HI 115)
        (subreg:HI (reg:SI 116) 0)) "../Src/main.c":30 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))
(insn 17 16 18 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 115)) "../Src/main.c":30 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 115)
        (nil)))
(insn 18 17 19 2 (set (reg:SI 117)
        (const_int 4 [0x4])) "../Src/main.c":31 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:QI 118)
        (subreg:QI (reg:SI 117) 0)) "../Src/main.c":31 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 20 19 21 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 118)) "../Src/main.c":31 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 118)
        (nil)))
(insn 21 20 22 2 (set (reg:SI 119)
        (const_int 1 [0x1])) "../Src/main.c":32 878 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:QI 120)
        (subreg:QI (reg:SI 119) 0)) "../Src/main.c":32 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 23 22 24 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pinCfg.GPIO_OUTPUT_SPEED+0 S1 A8])
        (reg:QI 120)) "../Src/main.c":32 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 120)
        (nil)))
(insn 24 23 25 2 (set (reg:SI 121)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":34 4 {*arm_addsi3}
     (nil))
(insn 25 24 26 2 (set (reg:SI 1 r1)
        (reg:SI 121)) "../Src/main.c":34 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":34 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 27 26 28 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":34 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 28 27 29 2 (set (reg:SI 123)
        (const_int 8192 [0x2000])) "../Src/main.c":37 878 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:HI 122)
        (subreg:HI (reg:SI 123) 0)) "../Src/main.c":37 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 123)
        (expr_list:REG_EQUAL (const_int 8192 [0x2000])
            (nil))))
(insn 30 29 31 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 122)) "../Src/main.c":37 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 122)
        (nil)))
(insn 31 30 32 2 (set (reg:SI 124)
        (const_int 3 [0x3])) "../Src/main.c":38 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:QI 125)
        (subreg:QI (reg:SI 124) 0)) "../Src/main.c":38 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 33 32 34 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 125)) "../Src/main.c":38 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 125)
        (nil)))
(insn 34 33 35 2 (set (reg:SI 126)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":40 4 {*arm_addsi3}
     (nil))
(insn 35 34 36 2 (set (reg:SI 1 r1)
        (reg:SI 126)) "../Src/main.c":40 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 36 35 37 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":40 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 37 36 38 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":40 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 38 37 39 2 (set (reg:SI 128)
        (const_int 8192 [0x2000])) "../Src/main.c":43 878 {*thumb2_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:HI 127)
        (subreg:HI (reg:SI 128) 0)) "../Src/main.c":43 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 128)
        (expr_list:REG_EQUAL (const_int 8192 [0x2000])
            (nil))))
(insn 40 39 41 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 127)) "../Src/main.c":43 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 127)
        (nil)))
(insn 41 40 42 2 (set (reg:SI 129)
        (const_int 4 [0x4])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:QI 130)
        (subreg:QI (reg:SI 129) 0)) "../Src/main.c":44 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 43 42 44 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 130)) "../Src/main.c":44 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 130)
        (nil)))
(insn 44 43 45 2 (set (reg:SI 131)
        (const_int 1 [0x1])) "../Src/main.c":45 878 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 2 (set (reg:QI 132)
        (subreg:QI (reg:SI 131) 0)) "../Src/main.c":45 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 46 45 47 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pinCfg.GPIO_OUTPUT_SPEED+0 S1 A8])
        (reg:QI 132)) "../Src/main.c":45 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 132)
        (nil)))
(insn 47 46 48 2 (set (reg:SI 133)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":47 4 {*arm_addsi3}
     (nil))
(insn 48 47 49 2 (set (reg:SI 1 r1)
        (reg:SI 133)) "../Src/main.c":47 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 49 48 50 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":47 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 50 49 53 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":47 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 53 50 0 2 (const_int 0 [0]) "../Src/main.c":48 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]


;; Function wait (wait, funcdef_no=2, decl_uid=4827, cgraph_uid=2, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5 4 3
;;
;; Loop 2
;;  header 5, latch 4
;;  depth 2, outer 1
;;  nodes: 5 4
;; 2 succs { 7 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r118: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a0 (r118,l0) best LO_REGS, allocno LO_REGS
    r117: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a1 (r117,l0) best LO_REGS, allocno LO_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a3 (r116,l0) best LO_REGS, allocno LO_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a2 (r115,l0) best LO_REGS, allocno LO_REGS
    r114: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a4 (r114,l0) best LO_REGS, allocno LO_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a6 (r113,l0) best LO_REGS, allocno LO_REGS
    r112: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a5 (r112,l0) best LO_REGS, allocno LO_REGS
    r111: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a7 (r111,l0) best LO_REGS, allocno LO_REGS
    r110: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a8 (r110,l0) best LO_REGS, allocno LO_REGS

  a0(r118,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a1(r117,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a2(r115,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a3(r116,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a4(r114,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a5(r112,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a6(r113,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a7(r111,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15
  a8(r110,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15

   Insn 39(l0): point = 0
   Insn 42(l0): point = 3
   Insn 12(l0): point = 5
   Insn 11(l0): point = 7
   Insn 35(l0): point = 10
   Insn 34(l0): point = 12
   Insn 33(l0): point = 14
   Insn 32(l0): point = 16
   Insn 28(l0): point = 19
   Insn 27(l0): point = 21
   Insn 26(l0): point = 23
   Insn 24(l0): point = 26
   Insn 23(l0): point = 28
   Insn 22(l0): point = 30
   Insn 18(l0): point = 33
   Insn 17(l0): point = 35
   Insn 16(l0): point = 37
   Insn 40(l0): point = 40
   Insn 7(l0): point = 42
   Insn 6(l0): point = 44
   Insn 2(l0): point = 46
 a0(r118): [13..14]
 a1(r117): [13..16]
 a2(r115): [20..21]
 a3(r116): [22..23]
 a4(r114): [29..30]
 a5(r112): [34..35]
 a6(r113): [36..37]
 a7(r111): [6..7]
 a8(r110): [43..44]
Compressing live ranges: from 49 to 16 - 32%
Ranges after the compression:
 a0(r118): [2..3]
 a1(r117): [2..3]
 a2(r115): [4..5]
 a3(r116): [6..7]
 a4(r114): [8..9]
 a5(r112): [10..11]
 a6(r113): [12..13]
 a7(r111): [0..1]
 a8(r110): [14..15]
  regions=1, blocks=9, points=16
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r110 l0     3    7:r111 l0     3    5:r112 l0     3    6:r113 l0     3
    4:r114 l0     3    2:r115 l0     3    3:r116 l0     3    1:r117 l0     2
    0:r118 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


wait

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r7={1d,8u} r12={1d} r13={1d,8u} r14={1d} r100={2d,2u} r102={1d,18u} r103={1d,7u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} 
;;    total ref usage 74{21d,53u,0e} in 21{21 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 time+0 S4 A32])
        (reg:SI 0 r0 [ time ])) "../Src/main.c":50 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ time ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 110)
        (const_int 0 [0])) "../Src/main.c":52 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 40 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 110)) "../Src/main.c":52 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(jump_insn 40 7 41 2 (set (pc)
        (label_ref 29)) "../Src/main.c":52 214 {*arm_jump}
     (nil)
 -> 29)
;;  succ:       7 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 41 40 31)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 31 41 10 3 11 (nil) [1 uses])
(note 10 31 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 111)
        (const_int 0 [0])) "../Src/main.c":53 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 42 3 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
        (reg:SI 111)) "../Src/main.c":53 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(jump_insn 42 12 43 3 (set (pc)
        (label_ref 19)) "../Src/main.c":53 214 {*arm_jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 43 42 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 112 113
(code_label 21 43 15 4 10 (nil) [1 uses])
(note 15 21 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 113)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])) "../Src/main.c":53 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 4 (set (reg:SI 112)
        (plus:SI (reg:SI 113)
            (const_int 1 [0x1]))) "../Src/main.c":53 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 18 17 19 4 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
        (reg:SI 112)) "../Src/main.c":53 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114
(code_label 19 18 20 5 9 (nil) [1 uses])
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 20 23 5 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])) "../Src/main.c":53 878 {*thumb2_movsi_insn}
     (nil))
(insn 23 22 24 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 114)
            (const_int 254 [0xfe]))) "../Src/main.c":53 196 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../Src/main.c":53 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 21)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 115 116
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "../Src/main.c":52 878 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 6 (set (reg:SI 115)
        (plus:SI (reg:SI 116)
            (const_int 1 [0x1]))) "../Src/main.c":52 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 28 27 29 6 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 115)) "../Src/main.c":52 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 117 118
(code_label 29 28 30 7 8 (nil) [1 uses])
(note 30 29 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 7 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "../Src/main.c":52 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 7 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [2 time+0 S4 A32])) "../Src/main.c":52 878 {*thumb2_movsi_insn}
     (nil))
(insn 34 33 35 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117)
            (reg:SI 118))) "../Src/main.c":52 196 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:SI 117)
            (nil))))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../Src/main.c":52 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 31)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 36 35 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 36 0 8 (const_int 0 [0]) "../Src/main.c":55 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]


;; Function main (main, funcdef_no=3, decl_uid=4838, cgraph_uid=3, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 9 5 6 7 8
;;
;; Loop 1
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 6 7 5 9 4
;;
;; Loop 2
;;  header 5, latch 5
;;  depth 2, outer 1
;;  nodes: 5
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 9 }
;; 9 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 3 }
Building IRA IR
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 44.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a1(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:2
  a2(r111,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a3(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:2
  a4(r110,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a5(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:2

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 52(l0): point = 15
   Insn 44(l0): point = 17
   Insn 43(l0): point = 19
   Insn 36(l0): point = 22
   Insn 35(l0): point = 24
   Insn 34(l0): point = 26
   Insn 33(l0): point = 28
   Insn 32(l0): point = 30
   Insn 31(l0): point = 32
   Insn 30(l0): point = 34
   Insn 27(l0): point = 37
   Insn 26(l0): point = 39
   Insn 24(l0): point = 41
   Insn 23(l0): point = 43
   Insn 22(l0): point = 45
   Insn 21(l0): point = 47
   Insn 20(l0): point = 49
   Insn 55(l0): point = 52
   Insn 18(l0): point = 55
   Insn 17(l0): point = 57
   Insn 16(l0): point = 59
   Insn 40(l0): point = 62
   Insn 39(l0): point = 64
   Insn 38(l0): point = 66
   Insn 6(l0): point = 69
   Insn 5(l0): point = 71
 a0(r112): [25..26]
 a1(r116): [27..28]
 a2(r111): [40..41]
 a3(r115): [42..43]
 a4(r110): [3..4]
 a5(r114): [5..6]
Compressing live ranges: from 74 to 12 - 16%
Ranges after the compression:
 a0(r112): [4..5]
 a1(r116): [6..7]
 a2(r111): [8..9]
 a3(r115): [10..11]
 a4(r110): [0..1]
 a5(r114): [2..3]
  regions=1, blocks=10, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r110 l0     3    2:r111 l0     3    0:r112 l0     3    5:r114 l0     3
    3:r115 l0     3    1:r116 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={15d,10u} r1={14d,5u} r2={9d} r3={9d} r7={1d,9u} r12={17d} r13={1d,17u} r14={9d} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={11d,3u} r101={8d} r102={1d,9u} r103={1d,8u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} 
;;    total ref usage 849{782d,67u,0e} in 33{25 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockInit") [flags 0x3]  <function_decl 0000000005a0ac00 clockInit>) [0 clockInit S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":59 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 6 5 45 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("gpioInit") [flags 0x3]  <function_decl 0000000005a0ae00 gpioInit>) [0 gpioInit S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":60 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              8 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 114
(code_label 45 6 7 3 16 (nil) [1 uses])
(note 7 45 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":64 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 3 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":64 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 10 9 11 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":64 220 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 11 10 12 3 (set (reg:SI 114)
        (reg:SI 0 r0)) "../Src/main.c":64 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 12 11 13 3 (set (reg:SI 110 [ _1 ])
        (reg:SI 114)) "../Src/main.c":64 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 13 12 14 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 110 [ _1 ])
            (const_int 1 [0x1]))) "../Src/main.c":64 196 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 110 [ _1 ])
        (nil)))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../Src/main.c":64 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 28)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 9, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":65 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 4 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":65 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 18 17 54 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_TogglePin") [flags 0x41]  <function_decl 0000000005a0aa00 MCAL_GPIO_TogglePin>) [0 MCAL_GPIO_TogglePin S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":65 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 54 18 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 25 9 (const_int 0 [0]) "../Src/main.c":66 236 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 6, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              5 (DFS_BACK)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 111 115
(code_label 25 55 19 5 14 (nil) [1 uses])
(note 19 25 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":66 878 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 22 5 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":66 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 22 21 23 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":66 220 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 23 22 24 5 (set (reg:SI 115)
        (reg:SI 0 r0)) "../Src/main.c":66 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 24 23 26 5 (set (reg:SI 111 [ _2 ])
        (reg:SI 115)) "../Src/main.c":66 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 26 24 27 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 111 [ _2 ])
            (const_int 1 [0x1]))) "../Src/main.c":66 196 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 111 [ _2 ])
        (nil)))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../Src/main.c":66 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 25)
;;  succ:       5 (DFS_BACK)
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 112 116
(code_label 28 27 29 6 13 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:SI 1 r1)
        (const_int 8192 [0x2000])) "../Src/main.c":69 878 {*thumb2_movsi_insn}
     (nil))
(insn 31 30 32 6 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":69 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 32 31 33 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":69 220 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 33 32 34 6 (set (reg:SI 116)
        (reg:SI 0 r0)) "../Src/main.c":69 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 34 33 35 6 (set (reg:SI 112 [ _3 ])
        (reg:SI 116)) "../Src/main.c":69 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 35 34 36 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 112 [ _3 ])
            (const_int 1 [0x1]))) "../Src/main.c":69 196 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 112 [ _3 ])
        (nil)))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "../Src/main.c":69 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 41)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:SI 1 r1)
        (const_int 8192 [0x2000])) "../Src/main.c":70 878 {*thumb2_movsi_insn}
     (nil))
(insn 39 38 40 7 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":70 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 40 39 41 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_TogglePin") [flags 0x41]  <function_decl 0000000005a0aa00 MCAL_GPIO_TogglePin>) [0 MCAL_GPIO_TogglePin S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":70 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(code_label 41 40 42 8 15 (nil) [1 uses])
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../Src/main.c":72 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 44 43 52 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait") [flags 0x3]  <function_decl 0000000005a14000 wait>) [0 wait S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":72 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 52 44 53 8 (set (pc)
        (label_ref 45)) "../Src/main.c":64 214 {*arm_jump}
     (nil)
 -> 45)
;;  succ:       3 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 53 52 0)
