
;; Function clockInit (clockInit, funcdef_no=0, decl_uid=4821, cgraph_uid=0, symbol_order=0)

clockInit ()
{
  struct RCC_TYPE_DEF * _1;
  long unsigned int _2;
  struct RCC_TYPE_DEF * _3;
  long unsigned int _4;
  struct RCC_TYPE_DEF * _5;
  long unsigned int _6;
  struct RCC_TYPE_DEF * _7;
  long unsigned int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1073876992B;
  _2 ={v} _1->APB2ENR;
  _3 = 1073876992B;
  _4 = _2 | 4;
  _3->APB2ENR ={v} _4;
  _5 = 1073876992B;
  _6 ={v} _5->APB2ENR;
  _7 = 1073876992B;
  _8 = _6 | 8;
  _7->APB2ENR ={v} _8;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )

clockInit ()
{
  struct RCC_TYPE_DEF * _1;
  long unsigned int _2;
  struct RCC_TYPE_DEF * _3;
  long unsigned int _4;
  struct RCC_TYPE_DEF * _5;
  long unsigned int _6;
  struct RCC_TYPE_DEF * _7;
  long unsigned int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1073876992B;
  _2 ={v} _1->APB2ENR;
  _3 = 1073876992B;
  _4 = _2 | 4;
  _3->APB2ENR ={v} _4;
  _5 = 1073876992B;
  _6 ={v} _5->APB2ENR;
  _7 = 1073876992B;
  _8 = _6 | 8;
  _7->APB2ENR ={v} _8;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 1073876992B;

(insn 5 4 0 (set (reg/f:SI 110 [ _1 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":16 -1
     (nil))

;; _2 ={v} _1->APB2ENR;

(insn 6 5 0 (set (reg:SI 111 [ _2 ])
        (mem/v:SI (plus:SI (reg/f:SI 110 [ _1 ])
                (const_int 24 [0x18])) [2 _1->APB2ENR+0 S4 A32])) "../Src/main.c":16 -1
     (nil))

;; _3 = 1073876992B;

(insn 7 6 0 (set (reg/f:SI 112 [ _3 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":16 -1
     (nil))

;; _4 = _2 | 4;

(insn 8 7 0 (set (reg:SI 113 [ _4 ])
        (ior:SI (reg:SI 111 [ _2 ])
            (const_int 4 [0x4]))) "../Src/main.c":16 -1
     (nil))

;; _3->APB2ENR ={v} _4;

(insn 9 8 0 (set (mem/v:SI (plus:SI (reg/f:SI 112 [ _3 ])
                (const_int 24 [0x18])) [2 _3->APB2ENR+0 S4 A32])
        (reg:SI 113 [ _4 ])) "../Src/main.c":16 -1
     (nil))

;; _5 = 1073876992B;

(insn 10 9 0 (set (reg/f:SI 114 [ _5 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":17 -1
     (nil))

;; _6 ={v} _5->APB2ENR;

(insn 11 10 0 (set (reg:SI 115 [ _6 ])
        (mem/v:SI (plus:SI (reg/f:SI 114 [ _5 ])
                (const_int 24 [0x18])) [2 _5->APB2ENR+0 S4 A32])) "../Src/main.c":17 -1
     (nil))

;; _7 = 1073876992B;

(insn 12 11 0 (set (reg/f:SI 116 [ _7 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":17 -1
     (nil))

;; _8 = _6 | 8;

(insn 13 12 0 (set (reg:SI 117 [ _8 ])
        (ior:SI (reg:SI 115 [ _6 ])
            (const_int 8 [0x8]))) "../Src/main.c":17 -1
     (nil))

;; _7->APB2ENR ={v} _8;

(insn 14 13 0 (set (mem/v:SI (plus:SI (reg/f:SI 116 [ _7 ])
                (const_int 24 [0x18])) [2 _7->APB2ENR+0 S4 A32])
        (reg:SI 117 [ _8 ])) "../Src/main.c":17 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 110 [ _1 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":16 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 111 [ _2 ])
        (mem/v:SI (plus:SI (reg/f:SI 110 [ _1 ])
                (const_int 24 [0x18])) [2 _1->APB2ENR+0 S4 A32])) "../Src/main.c":16 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 112 [ _3 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":16 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 113 [ _4 ])
        (ior:SI (reg:SI 111 [ _2 ])
            (const_int 4 [0x4]))) "../Src/main.c":16 -1
     (nil))
(insn 9 8 10 2 (set (mem/v:SI (plus:SI (reg/f:SI 112 [ _3 ])
                (const_int 24 [0x18])) [2 _3->APB2ENR+0 S4 A32])
        (reg:SI 113 [ _4 ])) "../Src/main.c":16 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 114 [ _5 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":17 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 115 [ _6 ])
        (mem/v:SI (plus:SI (reg/f:SI 114 [ _5 ])
                (const_int 24 [0x18])) [2 _5->APB2ENR+0 S4 A32])) "../Src/main.c":17 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 116 [ _7 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":17 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 117 [ _8 ])
        (ior:SI (reg:SI 115 [ _6 ])
            (const_int 8 [0x8]))) "../Src/main.c":17 -1
     (nil))
(insn 14 13 17 2 (set (mem/v:SI (plus:SI (reg/f:SI 116 [ _7 ])
                (const_int 24 [0x18])) [2 _7->APB2ENR+0 S4 A32])
        (reg:SI 117 [ _8 ])) "../Src/main.c":17 -1
     (nil))
(insn 17 14 0 2 (const_int 0 [0]) "../Src/main.c":18 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function gpioInit (gpioInit, funcdef_no=1, decl_uid=4823, cgraph_uid=1, symbol_order=1)

gpioInit ()
{
  struct GPIO_PinConfig_t pinCfg;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  pinCfg.GPIO_PinNumber = 2;
  pinCfg.GPIO_MODE = 2;
  MCAL_GPIO_Init (1073809408B, &pinCfg);
  pinCfg.GPIO_PinNumber = 2;
  pinCfg.GPIO_MODE = 4;
  pinCfg.GPIO_OUTPUT_SPEED = 1;
  MCAL_GPIO_Init (1073810432B, &pinCfg);
  pinCfg.GPIO_PinNumber = 8192;
  pinCfg.GPIO_MODE = 3;
  MCAL_GPIO_Init (1073809408B, &pinCfg);
  pinCfg.GPIO_PinNumber = 8192;
  pinCfg.GPIO_MODE = 4;
  pinCfg.GPIO_OUTPUT_SPEED = 1;
  MCAL_GPIO_Init (1073810432B, &pinCfg);
  pinCfg ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


gpioInit ()
{
  struct GPIO_PinConfig_t pinCfg;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  pinCfg.GPIO_PinNumber = 2;
  pinCfg.GPIO_MODE = 2;
  MCAL_GPIO_Init (1073809408B, &pinCfg);
  pinCfg.GPIO_PinNumber = 2;
  pinCfg.GPIO_MODE = 4;
  pinCfg.GPIO_OUTPUT_SPEED = 1;
  MCAL_GPIO_Init (1073810432B, &pinCfg);
  pinCfg.GPIO_PinNumber = 8192;
  pinCfg.GPIO_MODE = 3;
  MCAL_GPIO_Init (1073809408B, &pinCfg);
  pinCfg.GPIO_PinNumber = 8192;
  pinCfg.GPIO_MODE = 4;
  pinCfg.GPIO_OUTPUT_SPEED = 1;
  MCAL_GPIO_Init (1073810432B, &pinCfg);
  pinCfg ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; pinCfg.GPIO_PinNumber = 2;

(insn 5 4 6 (set (reg:SI 111)
        (const_int 2 [0x2])) "../Src/main.c":24 -1
     (nil))

(insn 6 5 7 (set (reg:HI 110)
        (subreg:HI (reg:SI 111) 0)) "../Src/main.c":24 -1
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn 7 6 0 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 110)) "../Src/main.c":24 -1
     (nil))

;; pinCfg.GPIO_MODE = 2;

(insn 8 7 9 (set (reg:SI 112)
        (const_int 2 [0x2])) "../Src/main.c":25 -1
     (nil))

(insn 9 8 10 (set (reg:QI 113)
        (subreg:QI (reg:SI 112) 0)) "../Src/main.c":25 -1
     (nil))

(insn 10 9 0 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 113)) "../Src/main.c":25 -1
     (nil))
(const_int 1073809408 [0x40010800])

Hot cost: 12 (final)

;; MCAL_GPIO_Init (1073809408B, &pinCfg);

(insn 11 10 12 (set (reg:SI 114)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":27 -1
     (nil))

(insn 12 11 13 (set (reg:SI 1 r1)
        (reg:SI 114)) "../Src/main.c":27 -1
     (nil))

(insn 13 12 14 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":27 -1
     (nil))

(call_insn 14 13 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":27 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; pinCfg.GPIO_PinNumber = 2;

(insn 15 14 16 (set (reg:SI 116)
        (const_int 2 [0x2])) "../Src/main.c":30 -1
     (nil))

(insn 16 15 17 (set (reg:HI 115)
        (subreg:HI (reg:SI 116) 0)) "../Src/main.c":30 -1
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn 17 16 0 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 115)) "../Src/main.c":30 -1
     (nil))

;; pinCfg.GPIO_MODE = 4;

(insn 18 17 19 (set (reg:SI 117)
        (const_int 4 [0x4])) "../Src/main.c":31 -1
     (nil))

(insn 19 18 20 (set (reg:QI 118)
        (subreg:QI (reg:SI 117) 0)) "../Src/main.c":31 -1
     (nil))

(insn 20 19 0 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 118)) "../Src/main.c":31 -1
     (nil))

;; pinCfg.GPIO_OUTPUT_SPEED = 1;

(insn 21 20 22 (set (reg:SI 119)
        (const_int 1 [0x1])) "../Src/main.c":32 -1
     (nil))

(insn 22 21 23 (set (reg:QI 120)
        (subreg:QI (reg:SI 119) 0)) "../Src/main.c":32 -1
     (nil))

(insn 23 22 0 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 pinCfg.GPIO_OUTPUT_SPEED+0 S1 A8])
        (reg:QI 120)) "../Src/main.c":32 -1
     (nil))
(const_int 1073810432 [0x40010c00])

Hot cost: 8 (final)

;; MCAL_GPIO_Init (1073810432B, &pinCfg);

(insn 24 23 25 (set (reg:SI 121)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":34 -1
     (nil))

(insn 25 24 26 (set (reg:SI 1 r1)
        (reg:SI 121)) "../Src/main.c":34 -1
     (nil))

(insn 26 25 27 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":34 -1
     (nil))

(call_insn 27 26 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":34 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; pinCfg.GPIO_PinNumber = 8192;

(insn 28 27 29 (set (reg:SI 123)
        (const_int 8192 [0x2000])) "../Src/main.c":37 -1
     (nil))

(insn 29 28 30 (set (reg:HI 122)
        (subreg:HI (reg:SI 123) 0)) "../Src/main.c":37 -1
     (expr_list:REG_EQUAL (const_int 8192 [0x2000])
        (nil)))

(insn 30 29 0 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 122)) "../Src/main.c":37 -1
     (nil))

;; pinCfg.GPIO_MODE = 3;

(insn 31 30 32 (set (reg:SI 124)
        (const_int 3 [0x3])) "../Src/main.c":38 -1
     (nil))

(insn 32 31 33 (set (reg:QI 125)
        (subreg:QI (reg:SI 124) 0)) "../Src/main.c":38 -1
     (nil))

(insn 33 32 0 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 125)) "../Src/main.c":38 -1
     (nil))
(const_int 1073809408 [0x40010800])

Hot cost: 12 (final)

;; MCAL_GPIO_Init (1073809408B, &pinCfg);

(insn 34 33 35 (set (reg:SI 126)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":40 -1
     (nil))

(insn 35 34 36 (set (reg:SI 1 r1)
        (reg:SI 126)) "../Src/main.c":40 -1
     (nil))

(insn 36 35 37 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":40 -1
     (nil))

(call_insn 37 36 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":40 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; pinCfg.GPIO_PinNumber = 8192;

(insn 38 37 39 (set (reg:SI 128)
        (const_int 8192 [0x2000])) "../Src/main.c":43 -1
     (nil))

(insn 39 38 40 (set (reg:HI 127)
        (subreg:HI (reg:SI 128) 0)) "../Src/main.c":43 -1
     (expr_list:REG_EQUAL (const_int 8192 [0x2000])
        (nil)))

(insn 40 39 0 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 127)) "../Src/main.c":43 -1
     (nil))

;; pinCfg.GPIO_MODE = 4;

(insn 41 40 42 (set (reg:SI 129)
        (const_int 4 [0x4])) "../Src/main.c":44 -1
     (nil))

(insn 42 41 43 (set (reg:QI 130)
        (subreg:QI (reg:SI 129) 0)) "../Src/main.c":44 -1
     (nil))

(insn 43 42 0 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 130)) "../Src/main.c":44 -1
     (nil))

;; pinCfg.GPIO_OUTPUT_SPEED = 1;

(insn 44 43 45 (set (reg:SI 131)
        (const_int 1 [0x1])) "../Src/main.c":45 -1
     (nil))

(insn 45 44 46 (set (reg:QI 132)
        (subreg:QI (reg:SI 131) 0)) "../Src/main.c":45 -1
     (nil))

(insn 46 45 0 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 pinCfg.GPIO_OUTPUT_SPEED+0 S1 A8])
        (reg:QI 132)) "../Src/main.c":45 -1
     (nil))
(const_int 1073810432 [0x40010c00])

Hot cost: 8 (final)

;; MCAL_GPIO_Init (1073810432B, &pinCfg);

(insn 47 46 48 (set (reg:SI 133)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":47 -1
     (nil))

(insn 48 47 49 (set (reg:SI 1 r1)
        (reg:SI 133)) "../Src/main.c":47 -1
     (nil))

(insn 49 48 50 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":47 -1
     (nil))

(call_insn 50 49 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":47 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; pinCfg ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 111)
        (const_int 2 [0x2])) "../Src/main.c":24 -1
     (nil))
(insn 6 5 7 2 (set (reg:HI 110)
        (subreg:HI (reg:SI 111) 0)) "../Src/main.c":24 -1
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(insn 7 6 8 2 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 110)) "../Src/main.c":24 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 112)
        (const_int 2 [0x2])) "../Src/main.c":25 -1
     (nil))
(insn 9 8 10 2 (set (reg:QI 113)
        (subreg:QI (reg:SI 112) 0)) "../Src/main.c":25 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 113)) "../Src/main.c":25 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 114)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":27 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 1 r1)
        (reg:SI 114)) "../Src/main.c":27 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":27 -1
     (nil))
(call_insn 14 13 15 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":27 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 116)
        (const_int 2 [0x2])) "../Src/main.c":30 -1
     (nil))
(insn 16 15 17 2 (set (reg:HI 115)
        (subreg:HI (reg:SI 116) 0)) "../Src/main.c":30 -1
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(insn 17 16 18 2 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 115)) "../Src/main.c":30 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 117)
        (const_int 4 [0x4])) "../Src/main.c":31 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 118)
        (subreg:QI (reg:SI 117) 0)) "../Src/main.c":31 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 118)) "../Src/main.c":31 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 119)
        (const_int 1 [0x1])) "../Src/main.c":32 -1
     (nil))
(insn 22 21 23 2 (set (reg:QI 120)
        (subreg:QI (reg:SI 119) 0)) "../Src/main.c":32 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 pinCfg.GPIO_OUTPUT_SPEED+0 S1 A8])
        (reg:QI 120)) "../Src/main.c":32 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 121)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":34 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 1 r1)
        (reg:SI 121)) "../Src/main.c":34 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":34 -1
     (nil))
(call_insn 27 26 28 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":34 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 28 27 29 2 (set (reg:SI 123)
        (const_int 8192 [0x2000])) "../Src/main.c":37 -1
     (nil))
(insn 29 28 30 2 (set (reg:HI 122)
        (subreg:HI (reg:SI 123) 0)) "../Src/main.c":37 -1
     (expr_list:REG_EQUAL (const_int 8192 [0x2000])
        (nil)))
(insn 30 29 31 2 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 122)) "../Src/main.c":37 -1
     (nil))
(insn 31 30 32 2 (set (reg:SI 124)
        (const_int 3 [0x3])) "../Src/main.c":38 -1
     (nil))
(insn 32 31 33 2 (set (reg:QI 125)
        (subreg:QI (reg:SI 124) 0)) "../Src/main.c":38 -1
     (nil))
(insn 33 32 34 2 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 125)) "../Src/main.c":38 -1
     (nil))
(insn 34 33 35 2 (set (reg:SI 126)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":40 -1
     (nil))
(insn 35 34 36 2 (set (reg:SI 1 r1)
        (reg:SI 126)) "../Src/main.c":40 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":40 -1
     (nil))
(call_insn 37 36 38 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":40 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 38 37 39 2 (set (reg:SI 128)
        (const_int 8192 [0x2000])) "../Src/main.c":43 -1
     (nil))
(insn 39 38 40 2 (set (reg:HI 127)
        (subreg:HI (reg:SI 128) 0)) "../Src/main.c":43 -1
     (expr_list:REG_EQUAL (const_int 8192 [0x2000])
        (nil)))
(insn 40 39 41 2 (set (mem/c:HI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 pinCfg.GPIO_PinNumber+0 S2 A32])
        (reg:HI 127)) "../Src/main.c":43 -1
     (nil))
(insn 41 40 42 2 (set (reg:SI 129)
        (const_int 4 [0x4])) "../Src/main.c":44 -1
     (nil))
(insn 42 41 43 2 (set (reg:QI 130)
        (subreg:QI (reg:SI 129) 0)) "../Src/main.c":44 -1
     (nil))
(insn 43 42 44 2 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 pinCfg.GPIO_MODE+0 S1 A16])
        (reg:QI 130)) "../Src/main.c":44 -1
     (nil))
(insn 44 43 45 2 (set (reg:SI 131)
        (const_int 1 [0x1])) "../Src/main.c":45 -1
     (nil))
(insn 45 44 46 2 (set (reg:QI 132)
        (subreg:QI (reg:SI 131) 0)) "../Src/main.c":45 -1
     (nil))
(insn 46 45 47 2 (set (mem/c:QI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 pinCfg.GPIO_OUTPUT_SPEED+0 S1 A8])
        (reg:QI 132)) "../Src/main.c":45 -1
     (nil))
(insn 47 46 48 2 (set (reg:SI 133)
        (plus:SI (reg/f:SI 105 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":47 -1
     (nil))
(insn 48 47 49 2 (set (reg:SI 1 r1)
        (reg:SI 133)) "../Src/main.c":47 -1
     (nil))
(insn 49 48 50 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":47 -1
     (nil))
(call_insn 50 49 53 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 0000000005a0a400 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":47 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 53 50 0 2 (const_int 0 [0]) "../Src/main.c":48 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function wait (wait, funcdef_no=2, decl_uid=4827, cgraph_uid=2, symbol_order=2)

wait (uint32_t time)
{
  uint32_t j;
  uint32_t i;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 3, loop depth 1
;;    pred:       7
  j_6 = 0;
  goto <bb 5>; [0.00%]
;;    succ:       5

;;   basic block 4, loop depth 2
;;    pred:       5
  j_8 = j_2 + 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       3
;;                4
  # j_2 = PHI <j_6(3), j_8(4)>
  if (j_2 <= 254)
    goto <bb 4>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       4
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  i_7 = i_1 + 1;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                6
  # i_1 = PHI <i_3(2), i_7(6)>
  if (i_1 < time_4(D))
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       3
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (time_4(D) - 4 )
Partition 6 (j_6 - 6 )
Partition 7 (i_7 - 7 )
Partition 8 (j_8 - 8 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (time_4(D) - 4 )
Partition 4 (j_6 - 6 )
Partition 5 (i_7 - 7 )
Partition 6 (j_8 - 8 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_1 <-> i_3
(2147483646, 0) j_2 <-> j_6
(2147483646, 0) i_1 <-> i_7
(2147483646, 0) j_2 <-> j_8

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (time_4(D) - 4 )
Partition 4 (j_6 - 6 )
Partition 5 (i_7 - 7 )
Partition 6 (j_8 - 8 )

Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (2)j_2 & (6)j_6 [map: 1, 4] : Success -> 1
Coalesce list: (1)i_1 & (7)i_7 [map: 0, 5] : Success -> 0
Coalesce list: (2)j_2 & (8)j_8 [map: 1, 6] : Success -> 1
Coalesce list: (1)i_1 & (7)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
Coalesce list: (2)j_2 & (8)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (6)j_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 7 )
Partition 1 (j_2 - 2 6 8 )
Partition 2 (time_4(D) - 4 )

wait (uint32_t time)
{
  uint32_t j;
  uint32_t i;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_3 = 0;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 3, loop depth 1
;;    pred:       7
  j_6 = 0;
  goto <bb 5>; [0.00%]
;;    succ:       5

;;   basic block 4, loop depth 2
;;    pred:       5
  j_8 = j_2 + 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       3
;;                4
  # j_2 = PHI <j_6(3), j_8(4)>
  if (j_2 <= 254)
    goto <bb 4>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       4
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  i_7 = i_1 + 1;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                6
  # i_1 = PHI <i_3(2), i_7(6)>
  if (i_1 < time_4(D))
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       3
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 6 5 7 (set (reg:SI 110)
        (const_int 0 [0])) "../Src/main.c":52 -1
     (nil))

(insn 7 6 0 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 110)) "../Src/main.c":52 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_6 = 0;

(insn 11 10 12 (set (reg:SI 111)
        (const_int 0 [0])) "../Src/main.c":53 -1
     (nil))

(insn 12 11 0 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
        (reg:SI 111)) "../Src/main.c":53 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; j_8 = j_2 + 1;

(insn 16 15 17 (set (reg:SI 113)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])) "../Src/main.c":53 -1
     (nil))

(insn 17 16 18 (set (reg:SI 112)
        (plus:SI (reg:SI 113)
            (const_int 1 [0x1]))) "../Src/main.c":53 -1
     (nil))

(insn 18 17 0 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
        (reg:SI 112)) "../Src/main.c":53 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 19 18 20 9 (nil) [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_2 <= 254)

(insn 22 20 23 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])) "../Src/main.c":53 -1
     (nil))

(insn 23 22 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 114)
            (const_int 254 [0xfe]))) "../Src/main.c":53 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../Src/main.c":53 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; i_7 = i_1 + 1;

(insn 26 25 27 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "../Src/main.c":52 -1
     (nil))

(insn 27 26 28 (set (reg:SI 115)
        (plus:SI (reg:SI 116)
            (const_int 1 [0x1]))) "../Src/main.c":52 -1
     (nil))

(insn 28 27 0 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 115)) "../Src/main.c":52 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 29 28 30 8 (nil) [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < time_4(D))

(insn 32 30 33 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "../Src/main.c":52 -1
     (nil))

(insn 33 32 34 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 time+0 S4 A32])) "../Src/main.c":52 -1
     (nil))

(insn 34 33 35 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117)
            (reg:SI 118))) "../Src/main.c":52 -1
     (nil))

(jump_insn 35 34 0 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../Src/main.c":52 -1
     (nil))

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 10 failed.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 time+0 S4 A32])
        (reg:SI 0 r0 [ time ])) "../Src/main.c":50 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 110)
        (const_int 0 [0])) "../Src/main.c":52 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 110)) "../Src/main.c":52 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 29)) "../Src/main.c":52 -1
     (nil)
 -> 29)
;;  succ:       8

(barrier 9 8 31)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 31 9 10 4 11 (nil) [1 uses])
(note 10 31 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 111)
        (const_int 0 [0])) "../Src/main.c":53 -1
     (nil))
(insn 12 11 13 4 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
        (reg:SI 111)) "../Src/main.c":53 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (label_ref 19)) "../Src/main.c":53 -1
     (nil)
 -> 19)
;;  succ:       6

(barrier 14 13 21)
;; basic block 5, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 21 14 15 5 10 (nil) [1 uses])
(note 15 21 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:SI 113)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])) "../Src/main.c":53 -1
     (nil))
(insn 17 16 18 5 (set (reg:SI 112)
        (plus:SI (reg:SI 113)
            (const_int 1 [0x1]))) "../Src/main.c":53 -1
     (nil))
(insn 18 17 19 5 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])
        (reg:SI 112)) "../Src/main.c":53 -1
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU,DFS_BACK)
(code_label 19 18 20 6 9 (nil) [1 uses])
(note 20 19 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 20 23 6 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A32])) "../Src/main.c":53 -1
     (nil))
(insn 23 22 24 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 114)
            (const_int 254 [0xfe]))) "../Src/main.c":53 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../Src/main.c":53 -1
     (nil)
 -> 21)
;;  succ:       5
;;              7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "../Src/main.c":52 -1
     (nil))
(insn 27 26 28 7 (set (reg:SI 115)
        (plus:SI (reg:SI 116)
            (const_int 1 [0x1]))) "../Src/main.c":52 -1
     (nil))
(insn 28 27 29 7 (set (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 115)) "../Src/main.c":52 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              7 (FALLTHRU,DFS_BACK)
(code_label 29 28 30 8 8 (nil) [1 uses])
(note 30 29 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 8 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "../Src/main.c":52 -1
     (nil))
(insn 33 32 34 8 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 105 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 time+0 S4 A32])) "../Src/main.c":52 -1
     (nil))
(insn 34 33 35 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117)
            (reg:SI 118))) "../Src/main.c":52 -1
     (nil))
(jump_insn 35 34 36 8 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../Src/main.c":52 -1
     (nil)
 -> 31)
;;  succ:       4
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 36 35 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 36 0 9 (const_int 0 [0]) "../Src/main.c":55 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function main (main, funcdef_no=3, decl_uid=4838, cgraph_uid=3, symbol_order=3)

main ()
{
  int D.4852;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  clockInit ();
  gpioInit ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  _1 = MCAL_GPIO_ReadPin (1073809408B, 2);
  if (_1 == 1)
    goto <bb 4>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       4
;;                6

;;   basic block 4, loop depth 1
;;    pred:       3
  MCAL_GPIO_TogglePin (1073810432B, 2);
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                5
  _2 = MCAL_GPIO_ReadPin (1073809408B, 2);
  if (_2 == 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 6, loop depth 1
;;    pred:       3
;;                5
  _3 = MCAL_GPIO_ReadPin (1073809408B, 8192);
  if (_3 == 1)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       6
  MCAL_GPIO_TogglePin (1073810432B, 8192);
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       6
;;                7
  wait (1);
  goto <bb 3>; [0.00%]
;;    succ:       3

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 17 (_17(D) - 17 )


Partition map 

Partition 0 (_17(D) - 17 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_17(D) - 17 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_17(D) - 17 )

main ()
{
  int D.4852;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  clockInit ();
  gpioInit ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  _1 = MCAL_GPIO_ReadPin (1073809408B, 2);
  if (_1 == 1)
    goto <bb 4>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       4
;;                6

;;   basic block 4, loop depth 1
;;    pred:       3
  MCAL_GPIO_TogglePin (1073810432B, 2);
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                5
  _2 = MCAL_GPIO_ReadPin (1073809408B, 2);
  if (_2 == 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 6, loop depth 1
;;    pred:       3
;;                5
  _3 = MCAL_GPIO_ReadPin (1073809408B, 8192);
  if (_3 == 1)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       6
  MCAL_GPIO_TogglePin (1073810432B, 8192);
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       6
;;                7
  wait (1);
  goto <bb 3>; [0.00%]
;;    succ:       3

}



;; Generating RTL for gimple basic block 2

;; clockInit ();

(call_insn 5 4 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockInit") [flags 0x3]  <function_decl 0000000005a0ac00 clockInit>) [0 clockInit S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":59 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

;; gpioInit ();

(call_insn 6 5 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("gpioInit") [flags 0x3]  <function_decl 0000000005a0ae00 gpioInit>) [0 gpioInit S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":60 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

;; Generating RTL for gimple basic block 3
(const_int 2 [0x2])

Hot cost: 4 (final)
(const_int 1073809408 [0x40010800])

Hot cost: 12 (final)

;; _1 = MCAL_GPIO_ReadPin (1073809408B, 2);

(insn 8 7 9 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":64 -1
     (nil))

(insn 9 8 10 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":64 -1
     (nil))

(call_insn 10 9 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":64 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))

(insn 11 10 12 (set (reg:SI 114)
        (reg:SI 0 r0)) "../Src/main.c":64 -1
     (nil))

(insn 12 11 0 (set (reg:SI 110 [ _1 ])
        (reg:SI 114)) "../Src/main.c":64 -1
     (nil))

;; if (_1 == 1)

(insn 13 12 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 110 [ _1 ])
            (const_int 1 [0x1]))) "../Src/main.c":64 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../Src/main.c":64 -1
     (nil))

;; Generating RTL for gimple basic block 4
(const_int 2 [0x2])

Hot cost: 4 (final)
(const_int 1073810432 [0x40010c00])

Hot cost: 8 (final)

;; MCAL_GPIO_TogglePin (1073810432B, 2);

(insn 16 15 17 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":65 -1
     (nil))

(insn 17 16 18 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":65 -1
     (nil))

(call_insn 18 17 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_TogglePin") [flags 0x41]  <function_decl 0000000005a0aa00 MCAL_GPIO_TogglePin>) [0 MCAL_GPIO_TogglePin S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":65 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))

;; Generating RTL for gimple basic block 5
(const_int 2 [0x2])

Hot cost: 4 (final)
(const_int 1073809408 [0x40010800])

Hot cost: 12 (final)

;; _2 = MCAL_GPIO_ReadPin (1073809408B, 2);

(insn 20 19 21 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":66 -1
     (nil))

(insn 21 20 22 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":66 -1
     (nil))

(call_insn 22 21 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":66 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))

(insn 23 22 24 (set (reg:SI 115)
        (reg:SI 0 r0)) "../Src/main.c":66 -1
     (nil))

(insn 24 23 0 (set (reg:SI 111 [ _2 ])
        (reg:SI 115)) "../Src/main.c":66 -1
     (nil))

;; if (_2 == 1)

(insn 26 24 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 111 [ _2 ])
            (const_int 1 [0x1]))) "../Src/main.c":66 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../Src/main.c":66 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 28 27 29 13 (nil) [0 uses])

(note 29 28 0 NOTE_INSN_BASIC_BLOCK)
(const_int 8192 [0x2000])

Hot cost: 4 (final)
(const_int 1073809408 [0x40010800])

Hot cost: 12 (final)

;; _3 = MCAL_GPIO_ReadPin (1073809408B, 8192);

(insn 30 29 31 (set (reg:SI 1 r1)
        (const_int 8192 [0x2000])) "../Src/main.c":69 -1
     (nil))

(insn 31 30 32 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":69 -1
     (nil))

(call_insn 32 31 33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":69 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))

(insn 33 32 34 (set (reg:SI 116)
        (reg:SI 0 r0)) "../Src/main.c":69 -1
     (nil))

(insn 34 33 0 (set (reg:SI 112 [ _3 ])
        (reg:SI 116)) "../Src/main.c":69 -1
     (nil))

;; if (_3 == 1)

(insn 35 34 36 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 112 [ _3 ])
            (const_int 1 [0x1]))) "../Src/main.c":69 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../Src/main.c":69 -1
     (nil))

;; Generating RTL for gimple basic block 7
(const_int 8192 [0x2000])

Hot cost: 4 (final)
(const_int 1073810432 [0x40010c00])

Hot cost: 8 (final)

;; MCAL_GPIO_TogglePin (1073810432B, 8192);

(insn 38 37 39 (set (reg:SI 1 r1)
        (const_int 8192 [0x2000])) "../Src/main.c":70 -1
     (nil))

(insn 39 38 40 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":70 -1
     (nil))

(call_insn 40 39 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_TogglePin") [flags 0x41]  <function_decl 0000000005a0aa00 MCAL_GPIO_TogglePin>) [0 MCAL_GPIO_TogglePin S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":70 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))

;; Generating RTL for gimple basic block 8

;; 

(code_label 41 40 42 15 (nil) [0 uses])

(note 42 41 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; wait (1);

(insn 43 42 44 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../Src/main.c":72 -1
     (nil))

(call_insn 44 43 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait") [flags 0x3]  <function_decl 0000000005a14000 wait>) [0 wait S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":72 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
deleting block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockInit") [flags 0x3]  <function_decl 0000000005a0ac00 clockInit>) [0 clockInit S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":59 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 6 5 45 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("gpioInit") [flags 0x3]  <function_decl 0000000005a0ae00 gpioInit>) [0 gpioInit S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":60 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              9 (DFS_BACK)
(code_label 45 6 7 4 16 (nil) [1 uses])
(note 7 45 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 4 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":64 -1
     (nil))
(insn 9 8 10 4 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":64 -1
     (nil))
(call_insn 10 9 11 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":64 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 11 10 12 4 (set (reg:SI 114)
        (reg:SI 0 r0)) "../Src/main.c":64 -1
     (nil))
(insn 12 11 13 4 (set (reg:SI 110 [ _1 ])
        (reg:SI 114)) "../Src/main.c":64 -1
     (nil))
(insn 13 12 14 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 110 [ _1 ])
            (const_int 1 [0x1]))) "../Src/main.c":64 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../Src/main.c":64 -1
     (nil)
 -> 28)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":65 -1
     (nil))
(insn 17 16 18 5 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":65 -1
     (nil))
(call_insn 18 17 25 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_TogglePin") [flags 0x41]  <function_decl 0000000005a0aa00 MCAL_GPIO_TogglePin>) [0 MCAL_GPIO_TogglePin S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":65 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              6 (DFS_BACK)
(code_label 25 18 19 6 14 (nil) [1 uses])
(note 19 25 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) "../Src/main.c":66 -1
     (nil))
(insn 21 20 22 6 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":66 -1
     (nil))
(call_insn 22 21 23 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":66 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 23 22 24 6 (set (reg:SI 115)
        (reg:SI 0 r0)) "../Src/main.c":66 -1
     (nil))
(insn 24 23 26 6 (set (reg:SI 111 [ _2 ])
        (reg:SI 115)) "../Src/main.c":66 -1
     (nil))
(insn 26 24 27 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 111 [ _2 ])
            (const_int 1 [0x1]))) "../Src/main.c":66 -1
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../Src/main.c":66 -1
     (nil)
 -> 25)
;;  succ:       6 (DFS_BACK)
;;              7 (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              6 (FALLTHRU)
(code_label 28 27 29 7 13 (nil) [1 uses])
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 7 (set (reg:SI 1 r1)
        (const_int 8192 [0x2000])) "../Src/main.c":69 -1
     (nil))
(insn 31 30 32 7 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../Src/main.c":69 -1
     (nil))
(call_insn 32 31 33 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_ReadPin") [flags 0x41]  <function_decl 0000000005a0a600 MCAL_GPIO_ReadPin>) [0 MCAL_GPIO_ReadPin S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":69 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 33 32 34 7 (set (reg:SI 116)
        (reg:SI 0 r0)) "../Src/main.c":69 -1
     (nil))
(insn 34 33 35 7 (set (reg:SI 112 [ _3 ])
        (reg:SI 116)) "../Src/main.c":69 -1
     (nil))
(insn 35 34 36 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 112 [ _3 ])
            (const_int 1 [0x1]))) "../Src/main.c":69 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "../Src/main.c":69 -1
     (nil)
 -> 41)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:SI 1 r1)
        (const_int 8192 [0x2000])) "../Src/main.c":70 -1
     (nil))
(insn 39 38 40 8 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":70 -1
     (nil))
(call_insn 40 39 41 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_TogglePin") [flags 0x41]  <function_decl 0000000005a0aa00 MCAL_GPIO_TogglePin>) [0 MCAL_GPIO_TogglePin S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":70 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8 (FALLTHRU)
(code_label 41 40 42 9 15 (nil) [1 uses])
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 9 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../Src/main.c":72 -1
     (nil))
(call_insn 44 43 46 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait") [flags 0x3]  <function_decl 0000000005a14000 wait>) [0 wait S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":72 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 46 44 47 9 (set (pc)
        (label_ref 45)) "../Src/main.c":64 -1
     (nil)
 -> 45)
;;  succ:       4 (DFS_BACK)

(barrier 47 46 0)
